# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables

__all__ = [
    'GetMessageQueueResult',
    'AwaitableGetMessageQueueResult',
    'get_message_queue',
]

@pulumi.output_type
class GetMessageQueueResult:
    """
    A collection of values returned by getMessageQueue.
    """
    def __init__(__self__, access_key=None, arn=None, id=None, name=None, secret_key=None, url=None):
        if access_key and not isinstance(access_key, str):
            raise TypeError("Expected argument 'access_key' to be a str")
        pulumi.set(__self__, "access_key", access_key)
        if arn and not isinstance(arn, str):
            raise TypeError("Expected argument 'arn' to be a str")
        pulumi.set(__self__, "arn", arn)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if secret_key and not isinstance(secret_key, str):
            raise TypeError("Expected argument 'secret_key' to be a str")
        pulumi.set(__self__, "secret_key", secret_key)
        if url and not isinstance(url, str):
            raise TypeError("Expected argument 'url' to be a str")
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="accessKey")
    def access_key(self) -> Optional[str]:
        return pulumi.get(self, "access_key")

    @property
    @pulumi.getter
    def arn(self) -> str:
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="secretKey")
    def secret_key(self) -> Optional[str]:
        return pulumi.get(self, "secret_key")

    @property
    @pulumi.getter
    def url(self) -> str:
        return pulumi.get(self, "url")


class AwaitableGetMessageQueueResult(GetMessageQueueResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMessageQueueResult(
            access_key=self.access_key,
            arn=self.arn,
            id=self.id,
            name=self.name,
            secret_key=self.secret_key,
            url=self.url)


def get_message_queue(access_key: Optional[str] = None,
                      name: Optional[str] = None,
                      secret_key: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMessageQueueResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['accessKey'] = access_key
    __args__['name'] = name
    __args__['secretKey'] = secret_key
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('yandex:index/getMessageQueue:getMessageQueue', __args__, opts=opts, typ=GetMessageQueueResult).value

    return AwaitableGetMessageQueueResult(
        access_key=__ret__.access_key,
        arn=__ret__.arn,
        id=__ret__.id,
        name=__ret__.name,
        secret_key=__ret__.secret_key,
        url=__ret__.url)
