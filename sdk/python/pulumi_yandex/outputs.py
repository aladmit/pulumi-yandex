# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables

__all__ = [
    'VpcSubnetDhcpOptions',
    'GetVpcSubnetDhcpOptionsResult',
]

@pulumi.output_type
class VpcSubnetDhcpOptions(dict):
    def __init__(__self__, *,
                 domain_name: Optional[str] = None,
                 domain_name_servers: Optional[Sequence[str]] = None,
                 ntp_servers: Optional[Sequence[str]] = None):
        if domain_name is not None:
            pulumi.set(__self__, "domain_name", domain_name)
        if domain_name_servers is not None:
            pulumi.set(__self__, "domain_name_servers", domain_name_servers)
        if ntp_servers is not None:
            pulumi.set(__self__, "ntp_servers", ntp_servers)

    @property
    @pulumi.getter(name="domainName")
    def domain_name(self) -> Optional[str]:
        return pulumi.get(self, "domain_name")

    @property
    @pulumi.getter(name="domainNameServers")
    def domain_name_servers(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "domain_name_servers")

    @property
    @pulumi.getter(name="ntpServers")
    def ntp_servers(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "ntp_servers")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetVpcSubnetDhcpOptionsResult(dict):
    def __init__(__self__, *,
                 domain_name: str,
                 domain_name_servers: Sequence[str],
                 ntp_servers: Sequence[str]):
        pulumi.set(__self__, "domain_name", domain_name)
        pulumi.set(__self__, "domain_name_servers", domain_name_servers)
        pulumi.set(__self__, "ntp_servers", ntp_servers)

    @property
    @pulumi.getter(name="domainName")
    def domain_name(self) -> str:
        return pulumi.get(self, "domain_name")

    @property
    @pulumi.getter(name="domainNameServers")
    def domain_name_servers(self) -> Sequence[str]:
        return pulumi.get(self, "domain_name_servers")

    @property
    @pulumi.getter(name="ntpServers")
    def ntp_servers(self) -> Sequence[str]:
        return pulumi.get(self, "ntp_servers")


