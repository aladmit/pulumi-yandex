// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IamServiceAccountKey extends pulumi.CustomResource {
    /**
     * Get an existing IamServiceAccountKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IamServiceAccountKeyState, opts?: pulumi.CustomResourceOptions): IamServiceAccountKey {
        return new IamServiceAccountKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/iamServiceAccountKey:IamServiceAccountKey';

    /**
     * Returns true if the given object is an instance of IamServiceAccountKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamServiceAccountKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamServiceAccountKey.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly description!: pulumi.Output<string | undefined>;
    public /*out*/ readonly encryptedPrivateKey!: pulumi.Output<string>;
    public readonly format!: pulumi.Output<string | undefined>;
    public readonly keyAlgorithm!: pulumi.Output<string | undefined>;
    public /*out*/ readonly keyFingerprint!: pulumi.Output<string>;
    public readonly pgpKey!: pulumi.Output<string | undefined>;
    public /*out*/ readonly privateKey!: pulumi.Output<string>;
    public /*out*/ readonly publicKey!: pulumi.Output<string>;
    public readonly serviceAccountId!: pulumi.Output<string>;

    /**
     * Create a IamServiceAccountKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamServiceAccountKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IamServiceAccountKeyArgs | IamServiceAccountKeyState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as IamServiceAccountKeyState | undefined;
            inputs["createdAt"] = state ? state.createdAt : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["encryptedPrivateKey"] = state ? state.encryptedPrivateKey : undefined;
            inputs["format"] = state ? state.format : undefined;
            inputs["keyAlgorithm"] = state ? state.keyAlgorithm : undefined;
            inputs["keyFingerprint"] = state ? state.keyFingerprint : undefined;
            inputs["pgpKey"] = state ? state.pgpKey : undefined;
            inputs["privateKey"] = state ? state.privateKey : undefined;
            inputs["publicKey"] = state ? state.publicKey : undefined;
            inputs["serviceAccountId"] = state ? state.serviceAccountId : undefined;
        } else {
            const args = argsOrState as IamServiceAccountKeyArgs | undefined;
            if ((!args || args.serviceAccountId === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'serviceAccountId'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["format"] = args ? args.format : undefined;
            inputs["keyAlgorithm"] = args ? args.keyAlgorithm : undefined;
            inputs["pgpKey"] = args ? args.pgpKey : undefined;
            inputs["serviceAccountId"] = args ? args.serviceAccountId : undefined;
            inputs["createdAt"] = undefined /*out*/;
            inputs["encryptedPrivateKey"] = undefined /*out*/;
            inputs["keyFingerprint"] = undefined /*out*/;
            inputs["privateKey"] = undefined /*out*/;
            inputs["publicKey"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(IamServiceAccountKey.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IamServiceAccountKey resources.
 */
export interface IamServiceAccountKeyState {
    readonly createdAt?: pulumi.Input<string>;
    readonly description?: pulumi.Input<string>;
    readonly encryptedPrivateKey?: pulumi.Input<string>;
    readonly format?: pulumi.Input<string>;
    readonly keyAlgorithm?: pulumi.Input<string>;
    readonly keyFingerprint?: pulumi.Input<string>;
    readonly pgpKey?: pulumi.Input<string>;
    readonly privateKey?: pulumi.Input<string>;
    readonly publicKey?: pulumi.Input<string>;
    readonly serviceAccountId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IamServiceAccountKey resource.
 */
export interface IamServiceAccountKeyArgs {
    readonly description?: pulumi.Input<string>;
    readonly format?: pulumi.Input<string>;
    readonly keyAlgorithm?: pulumi.Input<string>;
    readonly pgpKey?: pulumi.Input<string>;
    readonly serviceAccountId: pulumi.Input<string>;
}
