// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class StorageObjet extends pulumi.CustomResource {
    /**
     * Get an existing StorageObjet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageObjetState, opts?: pulumi.CustomResourceOptions): StorageObjet {
        return new StorageObjet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/storageObjet:StorageObjet';

    /**
     * Returns true if the given object is an instance of StorageObjet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageObjet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageObjet.__pulumiType;
    }

    public readonly accessKey!: pulumi.Output<string | undefined>;
    public readonly acl!: pulumi.Output<string | undefined>;
    public readonly bucket!: pulumi.Output<string>;
    public readonly content!: pulumi.Output<string | undefined>;
    public readonly contentBase64!: pulumi.Output<string | undefined>;
    public readonly key!: pulumi.Output<string>;
    public readonly secretKey!: pulumi.Output<string | undefined>;
    public readonly source!: pulumi.Output<string | undefined>;

    /**
     * Create a StorageObjet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageObjetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageObjetArgs | StorageObjetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as StorageObjetState | undefined;
            inputs["accessKey"] = state ? state.accessKey : undefined;
            inputs["acl"] = state ? state.acl : undefined;
            inputs["bucket"] = state ? state.bucket : undefined;
            inputs["content"] = state ? state.content : undefined;
            inputs["contentBase64"] = state ? state.contentBase64 : undefined;
            inputs["key"] = state ? state.key : undefined;
            inputs["secretKey"] = state ? state.secretKey : undefined;
            inputs["source"] = state ? state.source : undefined;
        } else {
            const args = argsOrState as StorageObjetArgs | undefined;
            if ((!args || args.bucket === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.key === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'key'");
            }
            inputs["accessKey"] = args ? args.accessKey : undefined;
            inputs["acl"] = args ? args.acl : undefined;
            inputs["bucket"] = args ? args.bucket : undefined;
            inputs["content"] = args ? args.content : undefined;
            inputs["contentBase64"] = args ? args.contentBase64 : undefined;
            inputs["key"] = args ? args.key : undefined;
            inputs["secretKey"] = args ? args.secretKey : undefined;
            inputs["source"] = args ? args.source : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(StorageObjet.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StorageObjet resources.
 */
export interface StorageObjetState {
    readonly accessKey?: pulumi.Input<string>;
    readonly acl?: pulumi.Input<string>;
    readonly bucket?: pulumi.Input<string>;
    readonly content?: pulumi.Input<string>;
    readonly contentBase64?: pulumi.Input<string>;
    readonly key?: pulumi.Input<string>;
    readonly secretKey?: pulumi.Input<string>;
    readonly source?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StorageObjet resource.
 */
export interface StorageObjetArgs {
    readonly accessKey?: pulumi.Input<string>;
    readonly acl?: pulumi.Input<string>;
    readonly bucket: pulumi.Input<string>;
    readonly content?: pulumi.Input<string>;
    readonly contentBase64?: pulumi.Input<string>;
    readonly key: pulumi.Input<string>;
    readonly secretKey?: pulumi.Input<string>;
    readonly source?: pulumi.Input<string>;
}
