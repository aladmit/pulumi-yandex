// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getKubernetesNodeGroup(args?: GetKubernetesNodeGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesNodeGroupResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("yandex:index/getKubernetesNodeGroup:getKubernetesNodeGroup", {
        "folderId": args.folderId,
        "name": args.name,
        "nodeGroupId": args.nodeGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getKubernetesNodeGroup.
 */
export interface GetKubernetesNodeGroupArgs {
    readonly folderId?: string;
    readonly name?: string;
    readonly nodeGroupId?: string;
}

/**
 * A collection of values returned by getKubernetesNodeGroup.
 */
export interface GetKubernetesNodeGroupResult {
    readonly allocationPolicy: outputs.GetKubernetesNodeGroupAllocationPolicy;
    readonly allowedUnsafeSysctls: string[];
    readonly clusterId: string;
    readonly createdAt: string;
    readonly deployPolicy: outputs.GetKubernetesNodeGroupDeployPolicy;
    readonly description: string;
    readonly folderId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceGroupId: string;
    readonly instanceTemplate: outputs.GetKubernetesNodeGroupInstanceTemplate;
    readonly labels: {[key: string]: string};
    readonly maintenancePolicy: outputs.GetKubernetesNodeGroupMaintenancePolicy;
    readonly name: string;
    readonly nodeGroupId: string;
    readonly nodeLabels: {[key: string]: string};
    readonly nodeTaints: string[];
    readonly scalePolicy: outputs.GetKubernetesNodeGroupScalePolicy;
    readonly status: string;
    readonly versionInfo: outputs.GetKubernetesNodeGroupVersionInfo;
}
