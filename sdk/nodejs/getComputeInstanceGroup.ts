// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export function getComputeInstanceGroup(args: GetComputeInstanceGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetComputeInstanceGroupResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("yandex:index/getComputeInstanceGroup:getComputeInstanceGroup", {
        "instanceGroupId": args.instanceGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputeInstanceGroup.
 */
export interface GetComputeInstanceGroupArgs {
    readonly instanceGroupId: string;
}

/**
 * A collection of values returned by getComputeInstanceGroup.
 */
export interface GetComputeInstanceGroupResult {
    readonly allocationPolicy: outputs.GetComputeInstanceGroupAllocationPolicy;
    readonly createdAt: string;
    readonly deletionProtection: boolean;
    readonly deployPolicy: outputs.GetComputeInstanceGroupDeployPolicy;
    readonly description: string;
    readonly folderId: string;
    readonly healthChecks: outputs.GetComputeInstanceGroupHealthCheck[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceGroupId: string;
    readonly instanceTemplate: outputs.GetComputeInstanceGroupInstanceTemplate;
    readonly instances: outputs.GetComputeInstanceGroupInstance[];
    readonly labels: {[key: string]: string};
    readonly loadBalancer: outputs.GetComputeInstanceGroupLoadBalancer;
    readonly loadBalancerState: outputs.GetComputeInstanceGroupLoadBalancerState;
    readonly name: string;
    readonly scalePolicy: outputs.GetComputeInstanceGroupScalePolicy;
    readonly serviceAccountId: string;
    readonly status: string;
    readonly variables: {[key: string]: string};
}
