// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetResourcemanagerFolder
    {
        public static Task<GetResourcemanagerFolderResult> InvokeAsync(GetResourcemanagerFolderArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetResourcemanagerFolderResult>("yandex:index/getResourcemanagerFolder:getResourcemanagerFolder", args ?? new GetResourcemanagerFolderArgs(), options.WithVersion());
    }


    public sealed class GetResourcemanagerFolderArgs : Pulumi.InvokeArgs
    {
        [Input("cloudId")]
        public string? CloudId { get; set; }

        [Input("folderId")]
        public string? FolderId { get; set; }

        [Input("labels")]
        private Dictionary<string, string>? _labels;
        public Dictionary<string, string> Labels
        {
            get => _labels ?? (_labels = new Dictionary<string, string>());
            set => _labels = value;
        }

        [Input("name")]
        public string? Name { get; set; }

        public GetResourcemanagerFolderArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetResourcemanagerFolderResult
    {
        public readonly string CloudId;
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string>? Labels;
        public readonly string Name;
        public readonly string Status;

        [OutputConstructor]
        private GetResourcemanagerFolderResult(
            string cloudId,

            string createdAt,

            string description,

            string folderId,

            string id,

            ImmutableDictionary<string, string>? labels,

            string name,

            string status)
        {
            CloudId = cloudId;
            CreatedAt = createdAt;
            Description = description;
            FolderId = folderId;
            Id = id;
            Labels = labels;
            Name = name;
            Status = status;
        }
    }
}
