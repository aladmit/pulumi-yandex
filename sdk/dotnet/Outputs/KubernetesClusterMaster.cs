// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class KubernetesClusterMaster
    {
        public readonly string? ClusterCaCertificate;
        public readonly string? ExternalV4Address;
        public readonly string? ExternalV4Endpoint;
        public readonly string? InternalV4Address;
        public readonly string? InternalV4Endpoint;
        public readonly Outputs.KubernetesClusterMasterMaintenancePolicy? MaintenancePolicy;
        public readonly bool? PublicIp;
        public readonly Outputs.KubernetesClusterMasterRegional? Regional;
        public readonly ImmutableArray<string> SecurityGroupIds;
        public readonly string? Version;
        public readonly Outputs.KubernetesClusterMasterVersionInfo? VersionInfo;
        public readonly Outputs.KubernetesClusterMasterZonal? Zonal;

        [OutputConstructor]
        private KubernetesClusterMaster(
            string? clusterCaCertificate,

            string? externalV4Address,

            string? externalV4Endpoint,

            string? internalV4Address,

            string? internalV4Endpoint,

            Outputs.KubernetesClusterMasterMaintenancePolicy? maintenancePolicy,

            bool? publicIp,

            Outputs.KubernetesClusterMasterRegional? regional,

            ImmutableArray<string> securityGroupIds,

            string? version,

            Outputs.KubernetesClusterMasterVersionInfo? versionInfo,

            Outputs.KubernetesClusterMasterZonal? zonal)
        {
            ClusterCaCertificate = clusterCaCertificate;
            ExternalV4Address = externalV4Address;
            ExternalV4Endpoint = externalV4Endpoint;
            InternalV4Address = internalV4Address;
            InternalV4Endpoint = internalV4Endpoint;
            MaintenancePolicy = maintenancePolicy;
            PublicIp = publicIp;
            Regional = regional;
            SecurityGroupIds = securityGroupIds;
            Version = version;
            VersionInfo = versionInfo;
            Zonal = zonal;
        }
    }
}
