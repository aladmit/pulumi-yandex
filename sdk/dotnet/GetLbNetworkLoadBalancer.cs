// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetLbNetworkLoadBalancer
    {
        public static Task<GetLbNetworkLoadBalancerResult> InvokeAsync(GetLbNetworkLoadBalancerArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLbNetworkLoadBalancerResult>("yandex:index/getLbNetworkLoadBalancer:getLbNetworkLoadBalancer", args ?? new GetLbNetworkLoadBalancerArgs(), options.WithVersion());
    }


    public sealed class GetLbNetworkLoadBalancerArgs : Pulumi.InvokeArgs
    {
        [Input("folderId")]
        public string? FolderId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("networkLoadBalancerId")]
        public string? NetworkLoadBalancerId { get; set; }

        public GetLbNetworkLoadBalancerArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLbNetworkLoadBalancerResult
    {
        public readonly ImmutableArray<Outputs.GetLbNetworkLoadBalancerAttachedTargetGroupResult> AttachedTargetGroups;
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly ImmutableArray<Outputs.GetLbNetworkLoadBalancerListenerResult> Listeners;
        public readonly string Name;
        public readonly string NetworkLoadBalancerId;
        public readonly string RegionId;
        public readonly string Type;

        [OutputConstructor]
        private GetLbNetworkLoadBalancerResult(
            ImmutableArray<Outputs.GetLbNetworkLoadBalancerAttachedTargetGroupResult> attachedTargetGroups,

            string createdAt,

            string description,

            string folderId,

            string id,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetLbNetworkLoadBalancerListenerResult> listeners,

            string name,

            string networkLoadBalancerId,

            string regionId,

            string type)
        {
            AttachedTargetGroups = attachedTargetGroups;
            CreatedAt = createdAt;
            Description = description;
            FolderId = folderId;
            Id = id;
            Labels = labels;
            Listeners = listeners;
            Name = name;
            NetworkLoadBalancerId = networkLoadBalancerId;
            RegionId = regionId;
            Type = type;
        }
    }
}
