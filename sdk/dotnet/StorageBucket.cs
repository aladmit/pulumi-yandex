// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/storageBucket:StorageBucket")]
    public partial class StorageBucket : Pulumi.CustomResource
    {
        [Output("accessKey")]
        public Output<string?> AccessKey { get; private set; } = null!;

        [Output("acl")]
        public Output<string?> Acl { get; private set; } = null!;

        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("bucketDomainName")]
        public Output<string> BucketDomainName { get; private set; } = null!;

        [Output("bucketPrefix")]
        public Output<string?> BucketPrefix { get; private set; } = null!;

        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.StorageBucketCorsRule>> CorsRules { get; private set; } = null!;

        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        [Output("grants")]
        public Output<ImmutableArray<Outputs.StorageBucketGrant>> Grants { get; private set; } = null!;

        [Output("lifecycleRules")]
        public Output<ImmutableArray<Outputs.StorageBucketLifecycleRule>> LifecycleRules { get; private set; } = null!;

        [Output("loggings")]
        public Output<ImmutableArray<Outputs.StorageBucketLogging>> Loggings { get; private set; } = null!;

        [Output("secretKey")]
        public Output<string?> SecretKey { get; private set; } = null!;

        [Output("serverSideEncryptionConfiguration")]
        public Output<Outputs.StorageBucketServerSideEncryptionConfiguration?> ServerSideEncryptionConfiguration { get; private set; } = null!;

        [Output("versioning")]
        public Output<Outputs.StorageBucketVersioning> Versioning { get; private set; } = null!;

        [Output("website")]
        public Output<Outputs.StorageBucketWebsite?> Website { get; private set; } = null!;

        [Output("websiteDomain")]
        public Output<string> WebsiteDomain { get; private set; } = null!;

        [Output("websiteEndpoint")]
        public Output<string> WebsiteEndpoint { get; private set; } = null!;


        /// <summary>
        /// Create a StorageBucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageBucket(string name, StorageBucketArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/storageBucket:StorageBucket", name, args ?? new StorageBucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageBucket(string name, Input<string> id, StorageBucketState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/storageBucket:StorageBucket", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageBucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageBucket Get(string name, Input<string> id, StorageBucketState? state = null, CustomResourceOptions? options = null)
        {
            return new StorageBucket(name, id, state, options);
        }
    }

    public sealed class StorageBucketArgs : Pulumi.ResourceArgs
    {
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.StorageBucketCorsRuleArgs>? _corsRules;
        public InputList<Inputs.StorageBucketCorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.StorageBucketCorsRuleArgs>());
            set => _corsRules = value;
        }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.StorageBucketGrantArgs>? _grants;
        public InputList<Inputs.StorageBucketGrantArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.StorageBucketGrantArgs>());
            set => _grants = value;
        }

        [Input("lifecycleRules")]
        private InputList<Inputs.StorageBucketLifecycleRuleArgs>? _lifecycleRules;
        public InputList<Inputs.StorageBucketLifecycleRuleArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.StorageBucketLifecycleRuleArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.StorageBucketLoggingArgs>? _loggings;
        public InputList<Inputs.StorageBucketLoggingArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.StorageBucketLoggingArgs>());
            set => _loggings = value;
        }

        [Input("secretKey")]
        public Input<string>? SecretKey { get; set; }

        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.StorageBucketServerSideEncryptionConfigurationArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("versioning")]
        public Input<Inputs.StorageBucketVersioningArgs>? Versioning { get; set; }

        [Input("website")]
        public Input<Inputs.StorageBucketWebsiteArgs>? Website { get; set; }

        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public StorageBucketArgs()
        {
        }
    }

    public sealed class StorageBucketState : Pulumi.ResourceArgs
    {
        [Input("accessKey")]
        public Input<string>? AccessKey { get; set; }

        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("bucketDomainName")]
        public Input<string>? BucketDomainName { get; set; }

        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.StorageBucketCorsRuleGetArgs>? _corsRules;
        public InputList<Inputs.StorageBucketCorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.StorageBucketCorsRuleGetArgs>());
            set => _corsRules = value;
        }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.StorageBucketGrantGetArgs>? _grants;
        public InputList<Inputs.StorageBucketGrantGetArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.StorageBucketGrantGetArgs>());
            set => _grants = value;
        }

        [Input("lifecycleRules")]
        private InputList<Inputs.StorageBucketLifecycleRuleGetArgs>? _lifecycleRules;
        public InputList<Inputs.StorageBucketLifecycleRuleGetArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.StorageBucketLifecycleRuleGetArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.StorageBucketLoggingGetArgs>? _loggings;
        public InputList<Inputs.StorageBucketLoggingGetArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.StorageBucketLoggingGetArgs>());
            set => _loggings = value;
        }

        [Input("secretKey")]
        public Input<string>? SecretKey { get; set; }

        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.StorageBucketServerSideEncryptionConfigurationGetArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("versioning")]
        public Input<Inputs.StorageBucketVersioningGetArgs>? Versioning { get; set; }

        [Input("website")]
        public Input<Inputs.StorageBucketWebsiteGetArgs>? Website { get; set; }

        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public StorageBucketState()
        {
        }
    }
}
