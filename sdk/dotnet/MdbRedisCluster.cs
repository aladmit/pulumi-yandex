// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/mdbRedisCluster:MdbRedisCluster")]
    public partial class MdbRedisCluster : Pulumi.CustomResource
    {
        [Output("config")]
        public Output<Outputs.MdbRedisClusterConfig> Config { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("environment")]
        public Output<string> Environment { get; private set; } = null!;

        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        [Output("health")]
        public Output<string> Health { get; private set; } = null!;

        [Output("hosts")]
        public Output<ImmutableArray<Outputs.MdbRedisClusterHost>> Hosts { get; private set; } = null!;

        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        [Output("resources")]
        public Output<Outputs.MdbRedisClusterResources> Resources { get; private set; } = null!;

        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        [Output("sharded")]
        public Output<bool?> Sharded { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a MdbRedisCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MdbRedisCluster(string name, MdbRedisClusterArgs args, CustomResourceOptions? options = null)
            : base("yandex:index/mdbRedisCluster:MdbRedisCluster", name, args ?? new MdbRedisClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MdbRedisCluster(string name, Input<string> id, MdbRedisClusterState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/mdbRedisCluster:MdbRedisCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MdbRedisCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MdbRedisCluster Get(string name, Input<string> id, MdbRedisClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new MdbRedisCluster(name, id, state, options);
        }
    }

    public sealed class MdbRedisClusterArgs : Pulumi.ResourceArgs
    {
        [Input("config", required: true)]
        public Input<Inputs.MdbRedisClusterConfigArgs> Config { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environment", required: true)]
        public Input<string> Environment { get; set; } = null!;

        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("hosts", required: true)]
        private InputList<Inputs.MdbRedisClusterHostArgs>? _hosts;
        public InputList<Inputs.MdbRedisClusterHostArgs> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<Inputs.MdbRedisClusterHostArgs>());
            set => _hosts = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        [Input("resources", required: true)]
        public Input<Inputs.MdbRedisClusterResourcesArgs> Resources { get; set; } = null!;

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("sharded")]
        public Input<bool>? Sharded { get; set; }

        public MdbRedisClusterArgs()
        {
        }
    }

    public sealed class MdbRedisClusterState : Pulumi.ResourceArgs
    {
        [Input("config")]
        public Input<Inputs.MdbRedisClusterConfigGetArgs>? Config { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environment")]
        public Input<string>? Environment { get; set; }

        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("health")]
        public Input<string>? Health { get; set; }

        [Input("hosts")]
        private InputList<Inputs.MdbRedisClusterHostGetArgs>? _hosts;
        public InputList<Inputs.MdbRedisClusterHostGetArgs> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<Inputs.MdbRedisClusterHostGetArgs>());
            set => _hosts = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        [Input("resources")]
        public Input<Inputs.MdbRedisClusterResourcesGetArgs>? Resources { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("sharded")]
        public Input<bool>? Sharded { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public MdbRedisClusterState()
        {
        }
    }
}
