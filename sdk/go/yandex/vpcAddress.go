// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VpcAddress struct {
	pulumi.CustomResourceState

	CreatedAt           pulumi.StringOutput                    `pulumi:"createdAt"`
	Description         pulumi.StringPtrOutput                 `pulumi:"description"`
	ExternalIpv4Address VpcAddressExternalIpv4AddressPtrOutput `pulumi:"externalIpv4Address"`
	FolderId            pulumi.StringOutput                    `pulumi:"folderId"`
	Labels              pulumi.StringMapOutput                 `pulumi:"labels"`
	Name                pulumi.StringOutput                    `pulumi:"name"`
	Reserved            pulumi.BoolOutput                      `pulumi:"reserved"`
	Used                pulumi.BoolOutput                      `pulumi:"used"`
}

// NewVpcAddress registers a new resource with the given unique name, arguments, and options.
func NewVpcAddress(ctx *pulumi.Context,
	name string, args *VpcAddressArgs, opts ...pulumi.ResourceOption) (*VpcAddress, error) {
	if args == nil {
		args = &VpcAddressArgs{}
	}

	var resource VpcAddress
	err := ctx.RegisterResource("yandex:index/vpcAddress:VpcAddress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcAddress gets an existing VpcAddress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcAddress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcAddressState, opts ...pulumi.ResourceOption) (*VpcAddress, error) {
	var resource VpcAddress
	err := ctx.ReadResource("yandex:index/vpcAddress:VpcAddress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcAddress resources.
type vpcAddressState struct {
	CreatedAt           *string                        `pulumi:"createdAt"`
	Description         *string                        `pulumi:"description"`
	ExternalIpv4Address *VpcAddressExternalIpv4Address `pulumi:"externalIpv4Address"`
	FolderId            *string                        `pulumi:"folderId"`
	Labels              map[string]string              `pulumi:"labels"`
	Name                *string                        `pulumi:"name"`
	Reserved            *bool                          `pulumi:"reserved"`
	Used                *bool                          `pulumi:"used"`
}

type VpcAddressState struct {
	CreatedAt           pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	ExternalIpv4Address VpcAddressExternalIpv4AddressPtrInput
	FolderId            pulumi.StringPtrInput
	Labels              pulumi.StringMapInput
	Name                pulumi.StringPtrInput
	Reserved            pulumi.BoolPtrInput
	Used                pulumi.BoolPtrInput
}

func (VpcAddressState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAddressState)(nil)).Elem()
}

type vpcAddressArgs struct {
	Description         *string                        `pulumi:"description"`
	ExternalIpv4Address *VpcAddressExternalIpv4Address `pulumi:"externalIpv4Address"`
	FolderId            *string                        `pulumi:"folderId"`
	Labels              map[string]string              `pulumi:"labels"`
	Name                *string                        `pulumi:"name"`
}

// The set of arguments for constructing a VpcAddress resource.
type VpcAddressArgs struct {
	Description         pulumi.StringPtrInput
	ExternalIpv4Address VpcAddressExternalIpv4AddressPtrInput
	FolderId            pulumi.StringPtrInput
	Labels              pulumi.StringMapInput
	Name                pulumi.StringPtrInput
}

func (VpcAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcAddressArgs)(nil)).Elem()
}

type VpcAddressInput interface {
	pulumi.Input

	ToVpcAddressOutput() VpcAddressOutput
	ToVpcAddressOutputWithContext(ctx context.Context) VpcAddressOutput
}

func (*VpcAddress) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAddress)(nil))
}

func (i *VpcAddress) ToVpcAddressOutput() VpcAddressOutput {
	return i.ToVpcAddressOutputWithContext(context.Background())
}

func (i *VpcAddress) ToVpcAddressOutputWithContext(ctx context.Context) VpcAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAddressOutput)
}

type VpcAddressOutput struct {
	*pulumi.OutputState
}

func (VpcAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAddress)(nil))
}

func (o VpcAddressOutput) ToVpcAddressOutput() VpcAddressOutput {
	return o
}

func (o VpcAddressOutput) ToVpcAddressOutputWithContext(ctx context.Context) VpcAddressOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VpcAddressOutput{})
}
