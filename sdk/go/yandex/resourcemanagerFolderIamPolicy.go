// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ResourcemanagerFolderIamPolicy struct {
	pulumi.CustomResourceState

	FolderId   pulumi.StringOutput `pulumi:"folderId"`
	PolicyData pulumi.StringOutput `pulumi:"policyData"`
}

// NewResourcemanagerFolderIamPolicy registers a new resource with the given unique name, arguments, and options.
func NewResourcemanagerFolderIamPolicy(ctx *pulumi.Context,
	name string, args *ResourcemanagerFolderIamPolicyArgs, opts ...pulumi.ResourceOption) (*ResourcemanagerFolderIamPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FolderId == nil {
		return nil, errors.New("invalid value for required argument 'FolderId'")
	}
	if args.PolicyData == nil {
		return nil, errors.New("invalid value for required argument 'PolicyData'")
	}
	var resource ResourcemanagerFolderIamPolicy
	err := ctx.RegisterResource("yandex:index/resourcemanagerFolderIamPolicy:ResourcemanagerFolderIamPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourcemanagerFolderIamPolicy gets an existing ResourcemanagerFolderIamPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourcemanagerFolderIamPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourcemanagerFolderIamPolicyState, opts ...pulumi.ResourceOption) (*ResourcemanagerFolderIamPolicy, error) {
	var resource ResourcemanagerFolderIamPolicy
	err := ctx.ReadResource("yandex:index/resourcemanagerFolderIamPolicy:ResourcemanagerFolderIamPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourcemanagerFolderIamPolicy resources.
type resourcemanagerFolderIamPolicyState struct {
	FolderId   *string `pulumi:"folderId"`
	PolicyData *string `pulumi:"policyData"`
}

type ResourcemanagerFolderIamPolicyState struct {
	FolderId   pulumi.StringPtrInput
	PolicyData pulumi.StringPtrInput
}

func (ResourcemanagerFolderIamPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcemanagerFolderIamPolicyState)(nil)).Elem()
}

type resourcemanagerFolderIamPolicyArgs struct {
	FolderId   string `pulumi:"folderId"`
	PolicyData string `pulumi:"policyData"`
}

// The set of arguments for constructing a ResourcemanagerFolderIamPolicy resource.
type ResourcemanagerFolderIamPolicyArgs struct {
	FolderId   pulumi.StringInput
	PolicyData pulumi.StringInput
}

func (ResourcemanagerFolderIamPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcemanagerFolderIamPolicyArgs)(nil)).Elem()
}

type ResourcemanagerFolderIamPolicyInput interface {
	pulumi.Input

	ToResourcemanagerFolderIamPolicyOutput() ResourcemanagerFolderIamPolicyOutput
	ToResourcemanagerFolderIamPolicyOutputWithContext(ctx context.Context) ResourcemanagerFolderIamPolicyOutput
}

func (*ResourcemanagerFolderIamPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcemanagerFolderIamPolicy)(nil))
}

func (i *ResourcemanagerFolderIamPolicy) ToResourcemanagerFolderIamPolicyOutput() ResourcemanagerFolderIamPolicyOutput {
	return i.ToResourcemanagerFolderIamPolicyOutputWithContext(context.Background())
}

func (i *ResourcemanagerFolderIamPolicy) ToResourcemanagerFolderIamPolicyOutputWithContext(ctx context.Context) ResourcemanagerFolderIamPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcemanagerFolderIamPolicyOutput)
}

type ResourcemanagerFolderIamPolicyOutput struct {
	*pulumi.OutputState
}

func (ResourcemanagerFolderIamPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcemanagerFolderIamPolicy)(nil))
}

func (o ResourcemanagerFolderIamPolicyOutput) ToResourcemanagerFolderIamPolicyOutput() ResourcemanagerFolderIamPolicyOutput {
	return o
}

func (o ResourcemanagerFolderIamPolicyOutput) ToResourcemanagerFolderIamPolicyOutputWithContext(ctx context.Context) ResourcemanagerFolderIamPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ResourcemanagerFolderIamPolicyOutput{})
}
