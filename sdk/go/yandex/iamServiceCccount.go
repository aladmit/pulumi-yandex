// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type IamServiceCccount struct {
	pulumi.CustomResourceState

	CreatedAt   pulumi.StringOutput    `pulumi:"createdAt"`
	Description pulumi.StringPtrOutput `pulumi:"description"`
	FolderId    pulumi.StringOutput    `pulumi:"folderId"`
	Name        pulumi.StringOutput    `pulumi:"name"`
}

// NewIamServiceCccount registers a new resource with the given unique name, arguments, and options.
func NewIamServiceCccount(ctx *pulumi.Context,
	name string, args *IamServiceCccountArgs, opts ...pulumi.ResourceOption) (*IamServiceCccount, error) {
	if args == nil {
		args = &IamServiceCccountArgs{}
	}

	var resource IamServiceCccount
	err := ctx.RegisterResource("yandex:index/iamServiceCccount:IamServiceCccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamServiceCccount gets an existing IamServiceCccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamServiceCccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamServiceCccountState, opts ...pulumi.ResourceOption) (*IamServiceCccount, error) {
	var resource IamServiceCccount
	err := ctx.ReadResource("yandex:index/iamServiceCccount:IamServiceCccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamServiceCccount resources.
type iamServiceCccountState struct {
	CreatedAt   *string `pulumi:"createdAt"`
	Description *string `pulumi:"description"`
	FolderId    *string `pulumi:"folderId"`
	Name        *string `pulumi:"name"`
}

type IamServiceCccountState struct {
	CreatedAt   pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	FolderId    pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
}

func (IamServiceCccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceCccountState)(nil)).Elem()
}

type iamServiceCccountArgs struct {
	Description *string `pulumi:"description"`
	FolderId    *string `pulumi:"folderId"`
	Name        *string `pulumi:"name"`
}

// The set of arguments for constructing a IamServiceCccount resource.
type IamServiceCccountArgs struct {
	Description pulumi.StringPtrInput
	FolderId    pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
}

func (IamServiceCccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceCccountArgs)(nil)).Elem()
}

type IamServiceCccountInput interface {
	pulumi.Input

	ToIamServiceCccountOutput() IamServiceCccountOutput
	ToIamServiceCccountOutputWithContext(ctx context.Context) IamServiceCccountOutput
}

func (*IamServiceCccount) ElementType() reflect.Type {
	return reflect.TypeOf((*IamServiceCccount)(nil))
}

func (i *IamServiceCccount) ToIamServiceCccountOutput() IamServiceCccountOutput {
	return i.ToIamServiceCccountOutputWithContext(context.Background())
}

func (i *IamServiceCccount) ToIamServiceCccountOutputWithContext(ctx context.Context) IamServiceCccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceCccountOutput)
}

type IamServiceCccountOutput struct {
	*pulumi.OutputState
}

func (IamServiceCccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamServiceCccount)(nil))
}

func (o IamServiceCccountOutput) ToIamServiceCccountOutput() IamServiceCccountOutput {
	return o
}

func (o IamServiceCccountOutput) ToIamServiceCccountOutputWithContext(ctx context.Context) IamServiceCccountOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(IamServiceCccountOutput{})
}
