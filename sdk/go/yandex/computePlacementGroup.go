// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ComputePlacementGroup struct {
	pulumi.CustomResourceState

	CreatedAt   pulumi.StringOutput    `pulumi:"createdAt"`
	Description pulumi.StringPtrOutput `pulumi:"description"`
	FolderId    pulumi.StringOutput    `pulumi:"folderId"`
	Labels      pulumi.StringMapOutput `pulumi:"labels"`
	Name        pulumi.StringOutput    `pulumi:"name"`
}

// NewComputePlacementGroup registers a new resource with the given unique name, arguments, and options.
func NewComputePlacementGroup(ctx *pulumi.Context,
	name string, args *ComputePlacementGroupArgs, opts ...pulumi.ResourceOption) (*ComputePlacementGroup, error) {
	if args == nil {
		args = &ComputePlacementGroupArgs{}
	}

	var resource ComputePlacementGroup
	err := ctx.RegisterResource("yandex:index/computePlacementGroup:ComputePlacementGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputePlacementGroup gets an existing ComputePlacementGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputePlacementGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputePlacementGroupState, opts ...pulumi.ResourceOption) (*ComputePlacementGroup, error) {
	var resource ComputePlacementGroup
	err := ctx.ReadResource("yandex:index/computePlacementGroup:ComputePlacementGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputePlacementGroup resources.
type computePlacementGroupState struct {
	CreatedAt   *string           `pulumi:"createdAt"`
	Description *string           `pulumi:"description"`
	FolderId    *string           `pulumi:"folderId"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
}

type ComputePlacementGroupState struct {
	CreatedAt   pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	FolderId    pulumi.StringPtrInput
	Labels      pulumi.StringMapInput
	Name        pulumi.StringPtrInput
}

func (ComputePlacementGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*computePlacementGroupState)(nil)).Elem()
}

type computePlacementGroupArgs struct {
	Description *string           `pulumi:"description"`
	FolderId    *string           `pulumi:"folderId"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
}

// The set of arguments for constructing a ComputePlacementGroup resource.
type ComputePlacementGroupArgs struct {
	Description pulumi.StringPtrInput
	FolderId    pulumi.StringPtrInput
	Labels      pulumi.StringMapInput
	Name        pulumi.StringPtrInput
}

func (ComputePlacementGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computePlacementGroupArgs)(nil)).Elem()
}

type ComputePlacementGroupInput interface {
	pulumi.Input

	ToComputePlacementGroupOutput() ComputePlacementGroupOutput
	ToComputePlacementGroupOutputWithContext(ctx context.Context) ComputePlacementGroupOutput
}

func (*ComputePlacementGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputePlacementGroup)(nil))
}

func (i *ComputePlacementGroup) ToComputePlacementGroupOutput() ComputePlacementGroupOutput {
	return i.ToComputePlacementGroupOutputWithContext(context.Background())
}

func (i *ComputePlacementGroup) ToComputePlacementGroupOutputWithContext(ctx context.Context) ComputePlacementGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputePlacementGroupOutput)
}

type ComputePlacementGroupOutput struct {
	*pulumi.OutputState
}

func (ComputePlacementGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputePlacementGroup)(nil))
}

func (o ComputePlacementGroupOutput) ToComputePlacementGroupOutput() ComputePlacementGroupOutput {
	return o
}

func (o ComputePlacementGroupOutput) ToComputePlacementGroupOutputWithContext(ctx context.Context) ComputePlacementGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ComputePlacementGroupOutput{})
}
