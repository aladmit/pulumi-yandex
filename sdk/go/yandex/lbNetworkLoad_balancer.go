// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LbNetworkLoad_balancer struct {
	pulumi.CustomResourceState

	AttachedTargetGroups LbNetworkLoad_balancerAttachedTargetGroupArrayOutput `pulumi:"attachedTargetGroups"`
	CreatedAt            pulumi.StringOutput                                  `pulumi:"createdAt"`
	Description          pulumi.StringPtrOutput                               `pulumi:"description"`
	FolderId             pulumi.StringOutput                                  `pulumi:"folderId"`
	Labels               pulumi.StringMapOutput                               `pulumi:"labels"`
	Listeners            LbNetworkLoad_balancerListenerArrayOutput            `pulumi:"listeners"`
	Name                 pulumi.StringOutput                                  `pulumi:"name"`
	RegionId             pulumi.StringPtrOutput                               `pulumi:"regionId"`
	Type                 pulumi.StringPtrOutput                               `pulumi:"type"`
}

// NewLbNetworkLoad_balancer registers a new resource with the given unique name, arguments, and options.
func NewLbNetworkLoad_balancer(ctx *pulumi.Context,
	name string, args *LbNetworkLoad_balancerArgs, opts ...pulumi.ResourceOption) (*LbNetworkLoad_balancer, error) {
	if args == nil {
		args = &LbNetworkLoad_balancerArgs{}
	}

	var resource LbNetworkLoad_balancer
	err := ctx.RegisterResource("yandex:index/lbNetworkLoad_balancer:LbNetworkLoad_balancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbNetworkLoad_balancer gets an existing LbNetworkLoad_balancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbNetworkLoad_balancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbNetworkLoad_balancerState, opts ...pulumi.ResourceOption) (*LbNetworkLoad_balancer, error) {
	var resource LbNetworkLoad_balancer
	err := ctx.ReadResource("yandex:index/lbNetworkLoad_balancer:LbNetworkLoad_balancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbNetworkLoad_balancer resources.
type lbNetworkLoad_balancerState struct {
	AttachedTargetGroups []LbNetworkLoad_balancerAttachedTargetGroup `pulumi:"attachedTargetGroups"`
	CreatedAt            *string                                     `pulumi:"createdAt"`
	Description          *string                                     `pulumi:"description"`
	FolderId             *string                                     `pulumi:"folderId"`
	Labels               map[string]string                           `pulumi:"labels"`
	Listeners            []LbNetworkLoad_balancerListener            `pulumi:"listeners"`
	Name                 *string                                     `pulumi:"name"`
	RegionId             *string                                     `pulumi:"regionId"`
	Type                 *string                                     `pulumi:"type"`
}

type LbNetworkLoad_balancerState struct {
	AttachedTargetGroups LbNetworkLoad_balancerAttachedTargetGroupArrayInput
	CreatedAt            pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	FolderId             pulumi.StringPtrInput
	Labels               pulumi.StringMapInput
	Listeners            LbNetworkLoad_balancerListenerArrayInput
	Name                 pulumi.StringPtrInput
	RegionId             pulumi.StringPtrInput
	Type                 pulumi.StringPtrInput
}

func (LbNetworkLoad_balancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbNetworkLoad_balancerState)(nil)).Elem()
}

type lbNetworkLoad_balancerArgs struct {
	AttachedTargetGroups []LbNetworkLoad_balancerAttachedTargetGroup `pulumi:"attachedTargetGroups"`
	Description          *string                                     `pulumi:"description"`
	FolderId             *string                                     `pulumi:"folderId"`
	Labels               map[string]string                           `pulumi:"labels"`
	Listeners            []LbNetworkLoad_balancerListener            `pulumi:"listeners"`
	Name                 *string                                     `pulumi:"name"`
	RegionId             *string                                     `pulumi:"regionId"`
	Type                 *string                                     `pulumi:"type"`
}

// The set of arguments for constructing a LbNetworkLoad_balancer resource.
type LbNetworkLoad_balancerArgs struct {
	AttachedTargetGroups LbNetworkLoad_balancerAttachedTargetGroupArrayInput
	Description          pulumi.StringPtrInput
	FolderId             pulumi.StringPtrInput
	Labels               pulumi.StringMapInput
	Listeners            LbNetworkLoad_balancerListenerArrayInput
	Name                 pulumi.StringPtrInput
	RegionId             pulumi.StringPtrInput
	Type                 pulumi.StringPtrInput
}

func (LbNetworkLoad_balancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbNetworkLoad_balancerArgs)(nil)).Elem()
}

type LbNetworkLoad_balancerInput interface {
	pulumi.Input

	ToLbNetworkLoad_balancerOutput() LbNetworkLoad_balancerOutput
	ToLbNetworkLoad_balancerOutputWithContext(ctx context.Context) LbNetworkLoad_balancerOutput
}

func (*LbNetworkLoad_balancer) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoad_balancer)(nil))
}

func (i *LbNetworkLoad_balancer) ToLbNetworkLoad_balancerOutput() LbNetworkLoad_balancerOutput {
	return i.ToLbNetworkLoad_balancerOutputWithContext(context.Background())
}

func (i *LbNetworkLoad_balancer) ToLbNetworkLoad_balancerOutputWithContext(ctx context.Context) LbNetworkLoad_balancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbNetworkLoad_balancerOutput)
}

type LbNetworkLoad_balancerOutput struct {
	*pulumi.OutputState
}

func (LbNetworkLoad_balancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbNetworkLoad_balancer)(nil))
}

func (o LbNetworkLoad_balancerOutput) ToLbNetworkLoad_balancerOutput() LbNetworkLoad_balancerOutput {
	return o
}

func (o LbNetworkLoad_balancerOutput) ToLbNetworkLoad_balancerOutputWithContext(ctx context.Context) LbNetworkLoad_balancerOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LbNetworkLoad_balancerOutput{})
}
