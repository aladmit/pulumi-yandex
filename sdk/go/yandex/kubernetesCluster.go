// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type KubernetesCluster struct {
	pulumi.CustomResourceState

	ClusterIpv4Range      pulumi.StringOutput                   `pulumi:"clusterIpv4Range"`
	CreatedAt             pulumi.StringOutput                   `pulumi:"createdAt"`
	Description           pulumi.StringOutput                   `pulumi:"description"`
	FolderId              pulumi.StringOutput                   `pulumi:"folderId"`
	Health                pulumi.StringOutput                   `pulumi:"health"`
	KmsProvider           KubernetesClusterKmsProviderPtrOutput `pulumi:"kmsProvider"`
	Labels                pulumi.StringMapOutput                `pulumi:"labels"`
	Master                KubernetesClusterMasterOutput         `pulumi:"master"`
	Name                  pulumi.StringOutput                   `pulumi:"name"`
	NetworkId             pulumi.StringOutput                   `pulumi:"networkId"`
	NetworkPolicyProvider pulumi.StringPtrOutput                `pulumi:"networkPolicyProvider"`
	NodeIpv4CidrMaskSize  pulumi.IntPtrOutput                   `pulumi:"nodeIpv4CidrMaskSize"`
	NodeServiceAccountId  pulumi.StringOutput                   `pulumi:"nodeServiceAccountId"`
	ReleaseChannel        pulumi.StringOutput                   `pulumi:"releaseChannel"`
	ServiceAccountId      pulumi.StringOutput                   `pulumi:"serviceAccountId"`
	ServiceIpv4Range      pulumi.StringOutput                   `pulumi:"serviceIpv4Range"`
	Status                pulumi.StringOutput                   `pulumi:"status"`
}

// NewKubernetesCluster registers a new resource with the given unique name, arguments, and options.
func NewKubernetesCluster(ctx *pulumi.Context,
	name string, args *KubernetesClusterArgs, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Master == nil {
		return nil, errors.New("invalid value for required argument 'Master'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.NodeServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'NodeServiceAccountId'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	var resource KubernetesCluster
	err := ctx.RegisterResource("yandex:index/kubernetesCluster:KubernetesCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesCluster gets an existing KubernetesCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesClusterState, opts ...pulumi.ResourceOption) (*KubernetesCluster, error) {
	var resource KubernetesCluster
	err := ctx.ReadResource("yandex:index/kubernetesCluster:KubernetesCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesCluster resources.
type kubernetesClusterState struct {
	ClusterIpv4Range      *string                       `pulumi:"clusterIpv4Range"`
	CreatedAt             *string                       `pulumi:"createdAt"`
	Description           *string                       `pulumi:"description"`
	FolderId              *string                       `pulumi:"folderId"`
	Health                *string                       `pulumi:"health"`
	KmsProvider           *KubernetesClusterKmsProvider `pulumi:"kmsProvider"`
	Labels                map[string]string             `pulumi:"labels"`
	Master                *KubernetesClusterMaster      `pulumi:"master"`
	Name                  *string                       `pulumi:"name"`
	NetworkId             *string                       `pulumi:"networkId"`
	NetworkPolicyProvider *string                       `pulumi:"networkPolicyProvider"`
	NodeIpv4CidrMaskSize  *int                          `pulumi:"nodeIpv4CidrMaskSize"`
	NodeServiceAccountId  *string                       `pulumi:"nodeServiceAccountId"`
	ReleaseChannel        *string                       `pulumi:"releaseChannel"`
	ServiceAccountId      *string                       `pulumi:"serviceAccountId"`
	ServiceIpv4Range      *string                       `pulumi:"serviceIpv4Range"`
	Status                *string                       `pulumi:"status"`
}

type KubernetesClusterState struct {
	ClusterIpv4Range      pulumi.StringPtrInput
	CreatedAt             pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	FolderId              pulumi.StringPtrInput
	Health                pulumi.StringPtrInput
	KmsProvider           KubernetesClusterKmsProviderPtrInput
	Labels                pulumi.StringMapInput
	Master                KubernetesClusterMasterPtrInput
	Name                  pulumi.StringPtrInput
	NetworkId             pulumi.StringPtrInput
	NetworkPolicyProvider pulumi.StringPtrInput
	NodeIpv4CidrMaskSize  pulumi.IntPtrInput
	NodeServiceAccountId  pulumi.StringPtrInput
	ReleaseChannel        pulumi.StringPtrInput
	ServiceAccountId      pulumi.StringPtrInput
	ServiceIpv4Range      pulumi.StringPtrInput
	Status                pulumi.StringPtrInput
}

func (KubernetesClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterState)(nil)).Elem()
}

type kubernetesClusterArgs struct {
	ClusterIpv4Range      *string                       `pulumi:"clusterIpv4Range"`
	Description           *string                       `pulumi:"description"`
	FolderId              *string                       `pulumi:"folderId"`
	KmsProvider           *KubernetesClusterKmsProvider `pulumi:"kmsProvider"`
	Labels                map[string]string             `pulumi:"labels"`
	Master                KubernetesClusterMaster       `pulumi:"master"`
	Name                  *string                       `pulumi:"name"`
	NetworkId             string                        `pulumi:"networkId"`
	NetworkPolicyProvider *string                       `pulumi:"networkPolicyProvider"`
	NodeIpv4CidrMaskSize  *int                          `pulumi:"nodeIpv4CidrMaskSize"`
	NodeServiceAccountId  string                        `pulumi:"nodeServiceAccountId"`
	ReleaseChannel        *string                       `pulumi:"releaseChannel"`
	ServiceAccountId      string                        `pulumi:"serviceAccountId"`
	ServiceIpv4Range      *string                       `pulumi:"serviceIpv4Range"`
}

// The set of arguments for constructing a KubernetesCluster resource.
type KubernetesClusterArgs struct {
	ClusterIpv4Range      pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	FolderId              pulumi.StringPtrInput
	KmsProvider           KubernetesClusterKmsProviderPtrInput
	Labels                pulumi.StringMapInput
	Master                KubernetesClusterMasterInput
	Name                  pulumi.StringPtrInput
	NetworkId             pulumi.StringInput
	NetworkPolicyProvider pulumi.StringPtrInput
	NodeIpv4CidrMaskSize  pulumi.IntPtrInput
	NodeServiceAccountId  pulumi.StringInput
	ReleaseChannel        pulumi.StringPtrInput
	ServiceAccountId      pulumi.StringInput
	ServiceIpv4Range      pulumi.StringPtrInput
}

func (KubernetesClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesClusterArgs)(nil)).Elem()
}

type KubernetesClusterInput interface {
	pulumi.Input

	ToKubernetesClusterOutput() KubernetesClusterOutput
	ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput
}

func (*KubernetesCluster) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesCluster)(nil))
}

func (i *KubernetesCluster) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return i.ToKubernetesClusterOutputWithContext(context.Background())
}

func (i *KubernetesCluster) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterOutput)
}

type KubernetesClusterOutput struct {
	*pulumi.OutputState
}

func (KubernetesClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesCluster)(nil))
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutput() KubernetesClusterOutput {
	return o
}

func (o KubernetesClusterOutput) ToKubernetesClusterOutputWithContext(ctx context.Context) KubernetesClusterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(KubernetesClusterOutput{})
}
