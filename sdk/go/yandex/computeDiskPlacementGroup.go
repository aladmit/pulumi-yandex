// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ComputeDiskPlacementGroup struct {
	pulumi.CustomResourceState

	CreatedAt   pulumi.StringOutput    `pulumi:"createdAt"`
	Description pulumi.StringPtrOutput `pulumi:"description"`
	FolderId    pulumi.StringOutput    `pulumi:"folderId"`
	Labels      pulumi.StringMapOutput `pulumi:"labels"`
	Name        pulumi.StringOutput    `pulumi:"name"`
	Status      pulumi.StringOutput    `pulumi:"status"`
	Zone        pulumi.StringPtrOutput `pulumi:"zone"`
}

// NewComputeDiskPlacementGroup registers a new resource with the given unique name, arguments, and options.
func NewComputeDiskPlacementGroup(ctx *pulumi.Context,
	name string, args *ComputeDiskPlacementGroupArgs, opts ...pulumi.ResourceOption) (*ComputeDiskPlacementGroup, error) {
	if args == nil {
		args = &ComputeDiskPlacementGroupArgs{}
	}

	var resource ComputeDiskPlacementGroup
	err := ctx.RegisterResource("yandex:index/computeDiskPlacementGroup:ComputeDiskPlacementGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComputeDiskPlacementGroup gets an existing ComputeDiskPlacementGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComputeDiskPlacementGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComputeDiskPlacementGroupState, opts ...pulumi.ResourceOption) (*ComputeDiskPlacementGroup, error) {
	var resource ComputeDiskPlacementGroup
	err := ctx.ReadResource("yandex:index/computeDiskPlacementGroup:ComputeDiskPlacementGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComputeDiskPlacementGroup resources.
type computeDiskPlacementGroupState struct {
	CreatedAt   *string           `pulumi:"createdAt"`
	Description *string           `pulumi:"description"`
	FolderId    *string           `pulumi:"folderId"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
	Status      *string           `pulumi:"status"`
	Zone        *string           `pulumi:"zone"`
}

type ComputeDiskPlacementGroupState struct {
	CreatedAt   pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	FolderId    pulumi.StringPtrInput
	Labels      pulumi.StringMapInput
	Name        pulumi.StringPtrInput
	Status      pulumi.StringPtrInput
	Zone        pulumi.StringPtrInput
}

func (ComputeDiskPlacementGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*computeDiskPlacementGroupState)(nil)).Elem()
}

type computeDiskPlacementGroupArgs struct {
	Description *string           `pulumi:"description"`
	FolderId    *string           `pulumi:"folderId"`
	Labels      map[string]string `pulumi:"labels"`
	Name        *string           `pulumi:"name"`
	Zone        *string           `pulumi:"zone"`
}

// The set of arguments for constructing a ComputeDiskPlacementGroup resource.
type ComputeDiskPlacementGroupArgs struct {
	Description pulumi.StringPtrInput
	FolderId    pulumi.StringPtrInput
	Labels      pulumi.StringMapInput
	Name        pulumi.StringPtrInput
	Zone        pulumi.StringPtrInput
}

func (ComputeDiskPlacementGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*computeDiskPlacementGroupArgs)(nil)).Elem()
}

type ComputeDiskPlacementGroupInput interface {
	pulumi.Input

	ToComputeDiskPlacementGroupOutput() ComputeDiskPlacementGroupOutput
	ToComputeDiskPlacementGroupOutputWithContext(ctx context.Context) ComputeDiskPlacementGroupOutput
}

func (*ComputeDiskPlacementGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeDiskPlacementGroup)(nil))
}

func (i *ComputeDiskPlacementGroup) ToComputeDiskPlacementGroupOutput() ComputeDiskPlacementGroupOutput {
	return i.ToComputeDiskPlacementGroupOutputWithContext(context.Background())
}

func (i *ComputeDiskPlacementGroup) ToComputeDiskPlacementGroupOutputWithContext(ctx context.Context) ComputeDiskPlacementGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComputeDiskPlacementGroupOutput)
}

type ComputeDiskPlacementGroupOutput struct {
	*pulumi.OutputState
}

func (ComputeDiskPlacementGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComputeDiskPlacementGroup)(nil))
}

func (o ComputeDiskPlacementGroupOutput) ToComputeDiskPlacementGroupOutput() ComputeDiskPlacementGroupOutput {
	return o
}

func (o ComputeDiskPlacementGroupOutput) ToComputeDiskPlacementGroupOutputWithContext(ctx context.Context) ComputeDiskPlacementGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ComputeDiskPlacementGroupOutput{})
}
