// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MdbPostgresqlCluster struct {
	pulumi.CustomResourceState

	Config           MdbPostgresqlClusterConfigOutput        `pulumi:"config"`
	CreatedAt        pulumi.StringOutput                     `pulumi:"createdAt"`
	Databases        MdbPostgresqlClusterDatabaseArrayOutput `pulumi:"databases"`
	Description      pulumi.StringPtrOutput                  `pulumi:"description"`
	Environment      pulumi.StringOutput                     `pulumi:"environment"`
	FolderId         pulumi.StringOutput                     `pulumi:"folderId"`
	Health           pulumi.StringOutput                     `pulumi:"health"`
	HostMasterName   pulumi.StringOutput                     `pulumi:"hostMasterName"`
	Hosts            MdbPostgresqlClusterHostArrayOutput     `pulumi:"hosts"`
	Labels           pulumi.StringMapOutput                  `pulumi:"labels"`
	Name             pulumi.StringOutput                     `pulumi:"name"`
	NetworkId        pulumi.StringOutput                     `pulumi:"networkId"`
	Restore          MdbPostgresqlClusterRestorePtrOutput    `pulumi:"restore"`
	SecurityGroupIds pulumi.StringArrayOutput                `pulumi:"securityGroupIds"`
	Status           pulumi.StringOutput                     `pulumi:"status"`
	Users            MdbPostgresqlClusterUserArrayOutput     `pulumi:"users"`
}

// NewMdbPostgresqlCluster registers a new resource with the given unique name, arguments, and options.
func NewMdbPostgresqlCluster(ctx *pulumi.Context,
	name string, args *MdbPostgresqlClusterArgs, opts ...pulumi.ResourceOption) (*MdbPostgresqlCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Databases == nil {
		return nil, errors.New("invalid value for required argument 'Databases'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.Hosts == nil {
		return nil, errors.New("invalid value for required argument 'Hosts'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Users == nil {
		return nil, errors.New("invalid value for required argument 'Users'")
	}
	var resource MdbPostgresqlCluster
	err := ctx.RegisterResource("yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbPostgresqlCluster gets an existing MdbPostgresqlCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbPostgresqlCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbPostgresqlClusterState, opts ...pulumi.ResourceOption) (*MdbPostgresqlCluster, error) {
	var resource MdbPostgresqlCluster
	err := ctx.ReadResource("yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbPostgresqlCluster resources.
type mdbPostgresqlClusterState struct {
	Config           *MdbPostgresqlClusterConfig    `pulumi:"config"`
	CreatedAt        *string                        `pulumi:"createdAt"`
	Databases        []MdbPostgresqlClusterDatabase `pulumi:"databases"`
	Description      *string                        `pulumi:"description"`
	Environment      *string                        `pulumi:"environment"`
	FolderId         *string                        `pulumi:"folderId"`
	Health           *string                        `pulumi:"health"`
	HostMasterName   *string                        `pulumi:"hostMasterName"`
	Hosts            []MdbPostgresqlClusterHost     `pulumi:"hosts"`
	Labels           map[string]string              `pulumi:"labels"`
	Name             *string                        `pulumi:"name"`
	NetworkId        *string                        `pulumi:"networkId"`
	Restore          *MdbPostgresqlClusterRestore   `pulumi:"restore"`
	SecurityGroupIds []string                       `pulumi:"securityGroupIds"`
	Status           *string                        `pulumi:"status"`
	Users            []MdbPostgresqlClusterUser     `pulumi:"users"`
}

type MdbPostgresqlClusterState struct {
	Config           MdbPostgresqlClusterConfigPtrInput
	CreatedAt        pulumi.StringPtrInput
	Databases        MdbPostgresqlClusterDatabaseArrayInput
	Description      pulumi.StringPtrInput
	Environment      pulumi.StringPtrInput
	FolderId         pulumi.StringPtrInput
	Health           pulumi.StringPtrInput
	HostMasterName   pulumi.StringPtrInput
	Hosts            MdbPostgresqlClusterHostArrayInput
	Labels           pulumi.StringMapInput
	Name             pulumi.StringPtrInput
	NetworkId        pulumi.StringPtrInput
	Restore          MdbPostgresqlClusterRestorePtrInput
	SecurityGroupIds pulumi.StringArrayInput
	Status           pulumi.StringPtrInput
	Users            MdbPostgresqlClusterUserArrayInput
}

func (MdbPostgresqlClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbPostgresqlClusterState)(nil)).Elem()
}

type mdbPostgresqlClusterArgs struct {
	Config           MdbPostgresqlClusterConfig     `pulumi:"config"`
	Databases        []MdbPostgresqlClusterDatabase `pulumi:"databases"`
	Description      *string                        `pulumi:"description"`
	Environment      string                         `pulumi:"environment"`
	FolderId         *string                        `pulumi:"folderId"`
	HostMasterName   *string                        `pulumi:"hostMasterName"`
	Hosts            []MdbPostgresqlClusterHost     `pulumi:"hosts"`
	Labels           map[string]string              `pulumi:"labels"`
	Name             *string                        `pulumi:"name"`
	NetworkId        string                         `pulumi:"networkId"`
	Restore          *MdbPostgresqlClusterRestore   `pulumi:"restore"`
	SecurityGroupIds []string                       `pulumi:"securityGroupIds"`
	Users            []MdbPostgresqlClusterUser     `pulumi:"users"`
}

// The set of arguments for constructing a MdbPostgresqlCluster resource.
type MdbPostgresqlClusterArgs struct {
	Config           MdbPostgresqlClusterConfigInput
	Databases        MdbPostgresqlClusterDatabaseArrayInput
	Description      pulumi.StringPtrInput
	Environment      pulumi.StringInput
	FolderId         pulumi.StringPtrInput
	HostMasterName   pulumi.StringPtrInput
	Hosts            MdbPostgresqlClusterHostArrayInput
	Labels           pulumi.StringMapInput
	Name             pulumi.StringPtrInput
	NetworkId        pulumi.StringInput
	Restore          MdbPostgresqlClusterRestorePtrInput
	SecurityGroupIds pulumi.StringArrayInput
	Users            MdbPostgresqlClusterUserArrayInput
}

func (MdbPostgresqlClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbPostgresqlClusterArgs)(nil)).Elem()
}

type MdbPostgresqlClusterInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterOutput() MdbPostgresqlClusterOutput
	ToMdbPostgresqlClusterOutputWithContext(ctx context.Context) MdbPostgresqlClusterOutput
}

func (*MdbPostgresqlCluster) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlCluster)(nil))
}

func (i *MdbPostgresqlCluster) ToMdbPostgresqlClusterOutput() MdbPostgresqlClusterOutput {
	return i.ToMdbPostgresqlClusterOutputWithContext(context.Background())
}

func (i *MdbPostgresqlCluster) ToMdbPostgresqlClusterOutputWithContext(ctx context.Context) MdbPostgresqlClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterOutput)
}

type MdbPostgresqlClusterOutput struct {
	*pulumi.OutputState
}

func (MdbPostgresqlClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbPostgresqlCluster)(nil))
}

func (o MdbPostgresqlClusterOutput) ToMdbPostgresqlClusterOutput() MdbPostgresqlClusterOutput {
	return o
}

func (o MdbPostgresqlClusterOutput) ToMdbPostgresqlClusterOutputWithContext(ctx context.Context) MdbPostgresqlClusterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MdbPostgresqlClusterOutput{})
}
