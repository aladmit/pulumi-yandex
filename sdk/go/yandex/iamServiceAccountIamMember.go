// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type IamServiceAccountIamMember struct {
	pulumi.CustomResourceState

	Member           pulumi.StringOutput `pulumi:"member"`
	Role             pulumi.StringOutput `pulumi:"role"`
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
	SleepAfter       pulumi.IntPtrOutput `pulumi:"sleepAfter"`
}

// NewIamServiceAccountIamMember registers a new resource with the given unique name, arguments, and options.
func NewIamServiceAccountIamMember(ctx *pulumi.Context,
	name string, args *IamServiceAccountIamMemberArgs, opts ...pulumi.ResourceOption) (*IamServiceAccountIamMember, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Member == nil {
		return nil, errors.New("invalid value for required argument 'Member'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	var resource IamServiceAccountIamMember
	err := ctx.RegisterResource("yandex:index/iamServiceAccountIamMember:IamServiceAccountIamMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIamServiceAccountIamMember gets an existing IamServiceAccountIamMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIamServiceAccountIamMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IamServiceAccountIamMemberState, opts ...pulumi.ResourceOption) (*IamServiceAccountIamMember, error) {
	var resource IamServiceAccountIamMember
	err := ctx.ReadResource("yandex:index/iamServiceAccountIamMember:IamServiceAccountIamMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IamServiceAccountIamMember resources.
type iamServiceAccountIamMemberState struct {
	Member           *string `pulumi:"member"`
	Role             *string `pulumi:"role"`
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	SleepAfter       *int    `pulumi:"sleepAfter"`
}

type IamServiceAccountIamMemberState struct {
	Member           pulumi.StringPtrInput
	Role             pulumi.StringPtrInput
	ServiceAccountId pulumi.StringPtrInput
	SleepAfter       pulumi.IntPtrInput
}

func (IamServiceAccountIamMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceAccountIamMemberState)(nil)).Elem()
}

type iamServiceAccountIamMemberArgs struct {
	Member           string `pulumi:"member"`
	Role             string `pulumi:"role"`
	ServiceAccountId string `pulumi:"serviceAccountId"`
	SleepAfter       *int   `pulumi:"sleepAfter"`
}

// The set of arguments for constructing a IamServiceAccountIamMember resource.
type IamServiceAccountIamMemberArgs struct {
	Member           pulumi.StringInput
	Role             pulumi.StringInput
	ServiceAccountId pulumi.StringInput
	SleepAfter       pulumi.IntPtrInput
}

func (IamServiceAccountIamMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*iamServiceAccountIamMemberArgs)(nil)).Elem()
}

type IamServiceAccountIamMemberInput interface {
	pulumi.Input

	ToIamServiceAccountIamMemberOutput() IamServiceAccountIamMemberOutput
	ToIamServiceAccountIamMemberOutputWithContext(ctx context.Context) IamServiceAccountIamMemberOutput
}

func (*IamServiceAccountIamMember) ElementType() reflect.Type {
	return reflect.TypeOf((*IamServiceAccountIamMember)(nil))
}

func (i *IamServiceAccountIamMember) ToIamServiceAccountIamMemberOutput() IamServiceAccountIamMemberOutput {
	return i.ToIamServiceAccountIamMemberOutputWithContext(context.Background())
}

func (i *IamServiceAccountIamMember) ToIamServiceAccountIamMemberOutputWithContext(ctx context.Context) IamServiceAccountIamMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IamServiceAccountIamMemberOutput)
}

type IamServiceAccountIamMemberOutput struct {
	*pulumi.OutputState
}

func (IamServiceAccountIamMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IamServiceAccountIamMember)(nil))
}

func (o IamServiceAccountIamMemberOutput) ToIamServiceAccountIamMemberOutput() IamServiceAccountIamMemberOutput {
	return o
}

func (o IamServiceAccountIamMemberOutput) ToIamServiceAccountIamMemberOutputWithContext(ctx context.Context) IamServiceAccountIamMemberOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(IamServiceAccountIamMemberOutput{})
}
