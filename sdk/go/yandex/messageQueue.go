// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MessageQueue struct {
	pulumi.CustomResourceState

	AccessKey                 pulumi.StringPtrOutput `pulumi:"accessKey"`
	Arn                       pulumi.StringOutput    `pulumi:"arn"`
	ContentBasedDeduplication pulumi.BoolPtrOutput   `pulumi:"contentBasedDeduplication"`
	DelaySeconds              pulumi.IntPtrOutput    `pulumi:"delaySeconds"`
	FifoQueue                 pulumi.BoolPtrOutput   `pulumi:"fifoQueue"`
	MaxMessageSize            pulumi.IntPtrOutput    `pulumi:"maxMessageSize"`
	MessageRetentionSeconds   pulumi.IntPtrOutput    `pulumi:"messageRetentionSeconds"`
	Name                      pulumi.StringOutput    `pulumi:"name"`
	NamePrefix                pulumi.StringPtrOutput `pulumi:"namePrefix"`
	ReceiveWaitTimeSeconds    pulumi.IntPtrOutput    `pulumi:"receiveWaitTimeSeconds"`
	RedrivePolicy             pulumi.StringPtrOutput `pulumi:"redrivePolicy"`
	SecretKey                 pulumi.StringPtrOutput `pulumi:"secretKey"`
	VisibilityTimeoutSeconds  pulumi.IntPtrOutput    `pulumi:"visibilityTimeoutSeconds"`
}

// NewMessageQueue registers a new resource with the given unique name, arguments, and options.
func NewMessageQueue(ctx *pulumi.Context,
	name string, args *MessageQueueArgs, opts ...pulumi.ResourceOption) (*MessageQueue, error) {
	if args == nil {
		args = &MessageQueueArgs{}
	}

	var resource MessageQueue
	err := ctx.RegisterResource("yandex:index/messageQueue:MessageQueue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMessageQueue gets an existing MessageQueue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMessageQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MessageQueueState, opts ...pulumi.ResourceOption) (*MessageQueue, error) {
	var resource MessageQueue
	err := ctx.ReadResource("yandex:index/messageQueue:MessageQueue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MessageQueue resources.
type messageQueueState struct {
	AccessKey                 *string `pulumi:"accessKey"`
	Arn                       *string `pulumi:"arn"`
	ContentBasedDeduplication *bool   `pulumi:"contentBasedDeduplication"`
	DelaySeconds              *int    `pulumi:"delaySeconds"`
	FifoQueue                 *bool   `pulumi:"fifoQueue"`
	MaxMessageSize            *int    `pulumi:"maxMessageSize"`
	MessageRetentionSeconds   *int    `pulumi:"messageRetentionSeconds"`
	Name                      *string `pulumi:"name"`
	NamePrefix                *string `pulumi:"namePrefix"`
	ReceiveWaitTimeSeconds    *int    `pulumi:"receiveWaitTimeSeconds"`
	RedrivePolicy             *string `pulumi:"redrivePolicy"`
	SecretKey                 *string `pulumi:"secretKey"`
	VisibilityTimeoutSeconds  *int    `pulumi:"visibilityTimeoutSeconds"`
}

type MessageQueueState struct {
	AccessKey                 pulumi.StringPtrInput
	Arn                       pulumi.StringPtrInput
	ContentBasedDeduplication pulumi.BoolPtrInput
	DelaySeconds              pulumi.IntPtrInput
	FifoQueue                 pulumi.BoolPtrInput
	MaxMessageSize            pulumi.IntPtrInput
	MessageRetentionSeconds   pulumi.IntPtrInput
	Name                      pulumi.StringPtrInput
	NamePrefix                pulumi.StringPtrInput
	ReceiveWaitTimeSeconds    pulumi.IntPtrInput
	RedrivePolicy             pulumi.StringPtrInput
	SecretKey                 pulumi.StringPtrInput
	VisibilityTimeoutSeconds  pulumi.IntPtrInput
}

func (MessageQueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*messageQueueState)(nil)).Elem()
}

type messageQueueArgs struct {
	AccessKey                 *string `pulumi:"accessKey"`
	ContentBasedDeduplication *bool   `pulumi:"contentBasedDeduplication"`
	DelaySeconds              *int    `pulumi:"delaySeconds"`
	FifoQueue                 *bool   `pulumi:"fifoQueue"`
	MaxMessageSize            *int    `pulumi:"maxMessageSize"`
	MessageRetentionSeconds   *int    `pulumi:"messageRetentionSeconds"`
	Name                      *string `pulumi:"name"`
	NamePrefix                *string `pulumi:"namePrefix"`
	ReceiveWaitTimeSeconds    *int    `pulumi:"receiveWaitTimeSeconds"`
	RedrivePolicy             *string `pulumi:"redrivePolicy"`
	SecretKey                 *string `pulumi:"secretKey"`
	VisibilityTimeoutSeconds  *int    `pulumi:"visibilityTimeoutSeconds"`
}

// The set of arguments for constructing a MessageQueue resource.
type MessageQueueArgs struct {
	AccessKey                 pulumi.StringPtrInput
	ContentBasedDeduplication pulumi.BoolPtrInput
	DelaySeconds              pulumi.IntPtrInput
	FifoQueue                 pulumi.BoolPtrInput
	MaxMessageSize            pulumi.IntPtrInput
	MessageRetentionSeconds   pulumi.IntPtrInput
	Name                      pulumi.StringPtrInput
	NamePrefix                pulumi.StringPtrInput
	ReceiveWaitTimeSeconds    pulumi.IntPtrInput
	RedrivePolicy             pulumi.StringPtrInput
	SecretKey                 pulumi.StringPtrInput
	VisibilityTimeoutSeconds  pulumi.IntPtrInput
}

func (MessageQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*messageQueueArgs)(nil)).Elem()
}

type MessageQueueInput interface {
	pulumi.Input

	ToMessageQueueOutput() MessageQueueOutput
	ToMessageQueueOutputWithContext(ctx context.Context) MessageQueueOutput
}

func (*MessageQueue) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageQueue)(nil))
}

func (i *MessageQueue) ToMessageQueueOutput() MessageQueueOutput {
	return i.ToMessageQueueOutputWithContext(context.Background())
}

func (i *MessageQueue) ToMessageQueueOutputWithContext(ctx context.Context) MessageQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MessageQueueOutput)
}

type MessageQueueOutput struct {
	*pulumi.OutputState
}

func (MessageQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MessageQueue)(nil))
}

func (o MessageQueueOutput) ToMessageQueueOutput() MessageQueueOutput {
	return o
}

func (o MessageQueueOutput) ToMessageQueueOutputWithContext(ctx context.Context) MessageQueueOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MessageQueueOutput{})
}
