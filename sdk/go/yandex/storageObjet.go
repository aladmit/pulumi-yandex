// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type StorageObjet struct {
	pulumi.CustomResourceState

	AccessKey     pulumi.StringPtrOutput `pulumi:"accessKey"`
	Acl           pulumi.StringPtrOutput `pulumi:"acl"`
	Bucket        pulumi.StringOutput    `pulumi:"bucket"`
	Content       pulumi.StringPtrOutput `pulumi:"content"`
	ContentBase64 pulumi.StringPtrOutput `pulumi:"contentBase64"`
	Key           pulumi.StringOutput    `pulumi:"key"`
	SecretKey     pulumi.StringPtrOutput `pulumi:"secretKey"`
	Source        pulumi.StringPtrOutput `pulumi:"source"`
}

// NewStorageObjet registers a new resource with the given unique name, arguments, and options.
func NewStorageObjet(ctx *pulumi.Context,
	name string, args *StorageObjetArgs, opts ...pulumi.ResourceOption) (*StorageObjet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	var resource StorageObjet
	err := ctx.RegisterResource("yandex:index/storageObjet:StorageObjet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageObjet gets an existing StorageObjet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageObjet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageObjetState, opts ...pulumi.ResourceOption) (*StorageObjet, error) {
	var resource StorageObjet
	err := ctx.ReadResource("yandex:index/storageObjet:StorageObjet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageObjet resources.
type storageObjetState struct {
	AccessKey     *string `pulumi:"accessKey"`
	Acl           *string `pulumi:"acl"`
	Bucket        *string `pulumi:"bucket"`
	Content       *string `pulumi:"content"`
	ContentBase64 *string `pulumi:"contentBase64"`
	Key           *string `pulumi:"key"`
	SecretKey     *string `pulumi:"secretKey"`
	Source        *string `pulumi:"source"`
}

type StorageObjetState struct {
	AccessKey     pulumi.StringPtrInput
	Acl           pulumi.StringPtrInput
	Bucket        pulumi.StringPtrInput
	Content       pulumi.StringPtrInput
	ContentBase64 pulumi.StringPtrInput
	Key           pulumi.StringPtrInput
	SecretKey     pulumi.StringPtrInput
	Source        pulumi.StringPtrInput
}

func (StorageObjetState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageObjetState)(nil)).Elem()
}

type storageObjetArgs struct {
	AccessKey     *string `pulumi:"accessKey"`
	Acl           *string `pulumi:"acl"`
	Bucket        string  `pulumi:"bucket"`
	Content       *string `pulumi:"content"`
	ContentBase64 *string `pulumi:"contentBase64"`
	Key           string  `pulumi:"key"`
	SecretKey     *string `pulumi:"secretKey"`
	Source        *string `pulumi:"source"`
}

// The set of arguments for constructing a StorageObjet resource.
type StorageObjetArgs struct {
	AccessKey     pulumi.StringPtrInput
	Acl           pulumi.StringPtrInput
	Bucket        pulumi.StringInput
	Content       pulumi.StringPtrInput
	ContentBase64 pulumi.StringPtrInput
	Key           pulumi.StringInput
	SecretKey     pulumi.StringPtrInput
	Source        pulumi.StringPtrInput
}

func (StorageObjetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageObjetArgs)(nil)).Elem()
}

type StorageObjetInput interface {
	pulumi.Input

	ToStorageObjetOutput() StorageObjetOutput
	ToStorageObjetOutputWithContext(ctx context.Context) StorageObjetOutput
}

func (*StorageObjet) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageObjet)(nil))
}

func (i *StorageObjet) ToStorageObjetOutput() StorageObjetOutput {
	return i.ToStorageObjetOutputWithContext(context.Background())
}

func (i *StorageObjet) ToStorageObjetOutputWithContext(ctx context.Context) StorageObjetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageObjetOutput)
}

type StorageObjetOutput struct {
	*pulumi.OutputState
}

func (StorageObjetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageObjet)(nil))
}

func (o StorageObjetOutput) ToStorageObjetOutput() StorageObjetOutput {
	return o
}

func (o StorageObjetOutput) ToStorageObjetOutputWithContext(ctx context.Context) StorageObjetOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(StorageObjetOutput{})
}
