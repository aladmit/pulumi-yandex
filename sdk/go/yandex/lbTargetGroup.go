// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type LbTargetGroup struct {
	pulumi.CustomResourceState

	CreatedAt   pulumi.StringOutput            `pulumi:"createdAt"`
	Description pulumi.StringPtrOutput         `pulumi:"description"`
	FolderId    pulumi.StringOutput            `pulumi:"folderId"`
	Labels      pulumi.StringMapOutput         `pulumi:"labels"`
	Name        pulumi.StringOutput            `pulumi:"name"`
	RegionId    pulumi.StringPtrOutput         `pulumi:"regionId"`
	Targets     LbTargetGroupTargetArrayOutput `pulumi:"targets"`
}

// NewLbTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewLbTargetGroup(ctx *pulumi.Context,
	name string, args *LbTargetGroupArgs, opts ...pulumi.ResourceOption) (*LbTargetGroup, error) {
	if args == nil {
		args = &LbTargetGroupArgs{}
	}

	var resource LbTargetGroup
	err := ctx.RegisterResource("yandex:index/lbTargetGroup:LbTargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLbTargetGroup gets an existing LbTargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLbTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LbTargetGroupState, opts ...pulumi.ResourceOption) (*LbTargetGroup, error) {
	var resource LbTargetGroup
	err := ctx.ReadResource("yandex:index/lbTargetGroup:LbTargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LbTargetGroup resources.
type lbTargetGroupState struct {
	CreatedAt   *string               `pulumi:"createdAt"`
	Description *string               `pulumi:"description"`
	FolderId    *string               `pulumi:"folderId"`
	Labels      map[string]string     `pulumi:"labels"`
	Name        *string               `pulumi:"name"`
	RegionId    *string               `pulumi:"regionId"`
	Targets     []LbTargetGroupTarget `pulumi:"targets"`
}

type LbTargetGroupState struct {
	CreatedAt   pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	FolderId    pulumi.StringPtrInput
	Labels      pulumi.StringMapInput
	Name        pulumi.StringPtrInput
	RegionId    pulumi.StringPtrInput
	Targets     LbTargetGroupTargetArrayInput
}

func (LbTargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*lbTargetGroupState)(nil)).Elem()
}

type lbTargetGroupArgs struct {
	Description *string               `pulumi:"description"`
	FolderId    *string               `pulumi:"folderId"`
	Labels      map[string]string     `pulumi:"labels"`
	Name        *string               `pulumi:"name"`
	RegionId    *string               `pulumi:"regionId"`
	Targets     []LbTargetGroupTarget `pulumi:"targets"`
}

// The set of arguments for constructing a LbTargetGroup resource.
type LbTargetGroupArgs struct {
	Description pulumi.StringPtrInput
	FolderId    pulumi.StringPtrInput
	Labels      pulumi.StringMapInput
	Name        pulumi.StringPtrInput
	RegionId    pulumi.StringPtrInput
	Targets     LbTargetGroupTargetArrayInput
}

func (LbTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lbTargetGroupArgs)(nil)).Elem()
}

type LbTargetGroupInput interface {
	pulumi.Input

	ToLbTargetGroupOutput() LbTargetGroupOutput
	ToLbTargetGroupOutputWithContext(ctx context.Context) LbTargetGroupOutput
}

func (*LbTargetGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*LbTargetGroup)(nil))
}

func (i *LbTargetGroup) ToLbTargetGroupOutput() LbTargetGroupOutput {
	return i.ToLbTargetGroupOutputWithContext(context.Background())
}

func (i *LbTargetGroup) ToLbTargetGroupOutputWithContext(ctx context.Context) LbTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbTargetGroupOutput)
}

type LbTargetGroupOutput struct {
	*pulumi.OutputState
}

func (LbTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbTargetGroup)(nil))
}

func (o LbTargetGroupOutput) ToLbTargetGroupOutput() LbTargetGroupOutput {
	return o
}

func (o LbTargetGroupOutput) ToLbTargetGroupOutputWithContext(ctx context.Context) LbTargetGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LbTargetGroupOutput{})
}
