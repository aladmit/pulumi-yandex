// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MdbMongodbCluster struct {
	pulumi.CustomResourceState

	ClusterConfig    MdbMongodbClusterClusterConfigOutput `pulumi:"clusterConfig"`
	ClusterId        pulumi.StringOutput                  `pulumi:"clusterId"`
	CreatedAt        pulumi.StringOutput                  `pulumi:"createdAt"`
	Databases        MdbMongodbClusterDatabaseArrayOutput `pulumi:"databases"`
	Description      pulumi.StringOutput                  `pulumi:"description"`
	Environment      pulumi.StringOutput                  `pulumi:"environment"`
	FolderId         pulumi.StringOutput                  `pulumi:"folderId"`
	Health           pulumi.StringOutput                  `pulumi:"health"`
	Hosts            MdbMongodbClusterHostArrayOutput     `pulumi:"hosts"`
	Labels           pulumi.StringMapOutput               `pulumi:"labels"`
	Name             pulumi.StringOutput                  `pulumi:"name"`
	NetworkId        pulumi.StringOutput                  `pulumi:"networkId"`
	Resources        MdbMongodbClusterResourcesOutput     `pulumi:"resources"`
	SecurityGroupIds pulumi.StringArrayOutput             `pulumi:"securityGroupIds"`
	Sharded          pulumi.BoolOutput                    `pulumi:"sharded"`
	Status           pulumi.StringOutput                  `pulumi:"status"`
	Users            MdbMongodbClusterUserArrayOutput     `pulumi:"users"`
}

// NewMdbMongodbCluster registers a new resource with the given unique name, arguments, and options.
func NewMdbMongodbCluster(ctx *pulumi.Context,
	name string, args *MdbMongodbClusterArgs, opts ...pulumi.ResourceOption) (*MdbMongodbCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterConfig == nil {
		return nil, errors.New("invalid value for required argument 'ClusterConfig'")
	}
	if args.Databases == nil {
		return nil, errors.New("invalid value for required argument 'Databases'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.Hosts == nil {
		return nil, errors.New("invalid value for required argument 'Hosts'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Resources == nil {
		return nil, errors.New("invalid value for required argument 'Resources'")
	}
	if args.Users == nil {
		return nil, errors.New("invalid value for required argument 'Users'")
	}
	var resource MdbMongodbCluster
	err := ctx.RegisterResource("yandex:index/mdbMongodbCluster:MdbMongodbCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbMongodbCluster gets an existing MdbMongodbCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbMongodbCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbMongodbClusterState, opts ...pulumi.ResourceOption) (*MdbMongodbCluster, error) {
	var resource MdbMongodbCluster
	err := ctx.ReadResource("yandex:index/mdbMongodbCluster:MdbMongodbCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbMongodbCluster resources.
type mdbMongodbClusterState struct {
	ClusterConfig    *MdbMongodbClusterClusterConfig `pulumi:"clusterConfig"`
	ClusterId        *string                         `pulumi:"clusterId"`
	CreatedAt        *string                         `pulumi:"createdAt"`
	Databases        []MdbMongodbClusterDatabase     `pulumi:"databases"`
	Description      *string                         `pulumi:"description"`
	Environment      *string                         `pulumi:"environment"`
	FolderId         *string                         `pulumi:"folderId"`
	Health           *string                         `pulumi:"health"`
	Hosts            []MdbMongodbClusterHost         `pulumi:"hosts"`
	Labels           map[string]string               `pulumi:"labels"`
	Name             *string                         `pulumi:"name"`
	NetworkId        *string                         `pulumi:"networkId"`
	Resources        *MdbMongodbClusterResources     `pulumi:"resources"`
	SecurityGroupIds []string                        `pulumi:"securityGroupIds"`
	Sharded          *bool                           `pulumi:"sharded"`
	Status           *string                         `pulumi:"status"`
	Users            []MdbMongodbClusterUser         `pulumi:"users"`
}

type MdbMongodbClusterState struct {
	ClusterConfig    MdbMongodbClusterClusterConfigPtrInput
	ClusterId        pulumi.StringPtrInput
	CreatedAt        pulumi.StringPtrInput
	Databases        MdbMongodbClusterDatabaseArrayInput
	Description      pulumi.StringPtrInput
	Environment      pulumi.StringPtrInput
	FolderId         pulumi.StringPtrInput
	Health           pulumi.StringPtrInput
	Hosts            MdbMongodbClusterHostArrayInput
	Labels           pulumi.StringMapInput
	Name             pulumi.StringPtrInput
	NetworkId        pulumi.StringPtrInput
	Resources        MdbMongodbClusterResourcesPtrInput
	SecurityGroupIds pulumi.StringArrayInput
	Sharded          pulumi.BoolPtrInput
	Status           pulumi.StringPtrInput
	Users            MdbMongodbClusterUserArrayInput
}

func (MdbMongodbClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbMongodbClusterState)(nil)).Elem()
}

type mdbMongodbClusterArgs struct {
	ClusterConfig    MdbMongodbClusterClusterConfig `pulumi:"clusterConfig"`
	ClusterId        *string                        `pulumi:"clusterId"`
	Databases        []MdbMongodbClusterDatabase    `pulumi:"databases"`
	Description      *string                        `pulumi:"description"`
	Environment      string                         `pulumi:"environment"`
	FolderId         *string                        `pulumi:"folderId"`
	Hosts            []MdbMongodbClusterHost        `pulumi:"hosts"`
	Labels           map[string]string              `pulumi:"labels"`
	Name             *string                        `pulumi:"name"`
	NetworkId        string                         `pulumi:"networkId"`
	Resources        MdbMongodbClusterResources     `pulumi:"resources"`
	SecurityGroupIds []string                       `pulumi:"securityGroupIds"`
	Users            []MdbMongodbClusterUser        `pulumi:"users"`
}

// The set of arguments for constructing a MdbMongodbCluster resource.
type MdbMongodbClusterArgs struct {
	ClusterConfig    MdbMongodbClusterClusterConfigInput
	ClusterId        pulumi.StringPtrInput
	Databases        MdbMongodbClusterDatabaseArrayInput
	Description      pulumi.StringPtrInput
	Environment      pulumi.StringInput
	FolderId         pulumi.StringPtrInput
	Hosts            MdbMongodbClusterHostArrayInput
	Labels           pulumi.StringMapInput
	Name             pulumi.StringPtrInput
	NetworkId        pulumi.StringInput
	Resources        MdbMongodbClusterResourcesInput
	SecurityGroupIds pulumi.StringArrayInput
	Users            MdbMongodbClusterUserArrayInput
}

func (MdbMongodbClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbMongodbClusterArgs)(nil)).Elem()
}

type MdbMongodbClusterInput interface {
	pulumi.Input

	ToMdbMongodbClusterOutput() MdbMongodbClusterOutput
	ToMdbMongodbClusterOutputWithContext(ctx context.Context) MdbMongodbClusterOutput
}

func (*MdbMongodbCluster) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbCluster)(nil))
}

func (i *MdbMongodbCluster) ToMdbMongodbClusterOutput() MdbMongodbClusterOutput {
	return i.ToMdbMongodbClusterOutputWithContext(context.Background())
}

func (i *MdbMongodbCluster) ToMdbMongodbClusterOutputWithContext(ctx context.Context) MdbMongodbClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMongodbClusterOutput)
}

type MdbMongodbClusterOutput struct {
	*pulumi.OutputState
}

func (MdbMongodbClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMongodbCluster)(nil))
}

func (o MdbMongodbClusterOutput) ToMdbMongodbClusterOutput() MdbMongodbClusterOutput {
	return o
}

func (o MdbMongodbClusterOutput) ToMdbMongodbClusterOutputWithContext(ctx context.Context) MdbMongodbClusterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MdbMongodbClusterOutput{})
}
