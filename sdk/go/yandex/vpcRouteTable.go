// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VpcRouteTable struct {
	pulumi.CustomResourceState

	CreatedAt    pulumi.StringOutput                 `pulumi:"createdAt"`
	Description  pulumi.StringPtrOutput              `pulumi:"description"`
	FolderId     pulumi.StringOutput                 `pulumi:"folderId"`
	Labels       pulumi.StringMapOutput              `pulumi:"labels"`
	Name         pulumi.StringOutput                 `pulumi:"name"`
	NetworkId    pulumi.StringOutput                 `pulumi:"networkId"`
	StaticRoutes VpcRouteTableStaticRouteArrayOutput `pulumi:"staticRoutes"`
}

// NewVpcRouteTable registers a new resource with the given unique name, arguments, and options.
func NewVpcRouteTable(ctx *pulumi.Context,
	name string, args *VpcRouteTableArgs, opts ...pulumi.ResourceOption) (*VpcRouteTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	var resource VpcRouteTable
	err := ctx.RegisterResource("yandex:index/vpcRouteTable:VpcRouteTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcRouteTable gets an existing VpcRouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcRouteTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcRouteTableState, opts ...pulumi.ResourceOption) (*VpcRouteTable, error) {
	var resource VpcRouteTable
	err := ctx.ReadResource("yandex:index/vpcRouteTable:VpcRouteTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcRouteTable resources.
type vpcRouteTableState struct {
	CreatedAt    *string                    `pulumi:"createdAt"`
	Description  *string                    `pulumi:"description"`
	FolderId     *string                    `pulumi:"folderId"`
	Labels       map[string]string          `pulumi:"labels"`
	Name         *string                    `pulumi:"name"`
	NetworkId    *string                    `pulumi:"networkId"`
	StaticRoutes []VpcRouteTableStaticRoute `pulumi:"staticRoutes"`
}

type VpcRouteTableState struct {
	CreatedAt    pulumi.StringPtrInput
	Description  pulumi.StringPtrInput
	FolderId     pulumi.StringPtrInput
	Labels       pulumi.StringMapInput
	Name         pulumi.StringPtrInput
	NetworkId    pulumi.StringPtrInput
	StaticRoutes VpcRouteTableStaticRouteArrayInput
}

func (VpcRouteTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcRouteTableState)(nil)).Elem()
}

type vpcRouteTableArgs struct {
	Description  *string                    `pulumi:"description"`
	FolderId     *string                    `pulumi:"folderId"`
	Labels       map[string]string          `pulumi:"labels"`
	Name         *string                    `pulumi:"name"`
	NetworkId    string                     `pulumi:"networkId"`
	StaticRoutes []VpcRouteTableStaticRoute `pulumi:"staticRoutes"`
}

// The set of arguments for constructing a VpcRouteTable resource.
type VpcRouteTableArgs struct {
	Description  pulumi.StringPtrInput
	FolderId     pulumi.StringPtrInput
	Labels       pulumi.StringMapInput
	Name         pulumi.StringPtrInput
	NetworkId    pulumi.StringInput
	StaticRoutes VpcRouteTableStaticRouteArrayInput
}

func (VpcRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcRouteTableArgs)(nil)).Elem()
}

type VpcRouteTableInput interface {
	pulumi.Input

	ToVpcRouteTableOutput() VpcRouteTableOutput
	ToVpcRouteTableOutputWithContext(ctx context.Context) VpcRouteTableOutput
}

func (*VpcRouteTable) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcRouteTable)(nil))
}

func (i *VpcRouteTable) ToVpcRouteTableOutput() VpcRouteTableOutput {
	return i.ToVpcRouteTableOutputWithContext(context.Background())
}

func (i *VpcRouteTable) ToVpcRouteTableOutputWithContext(ctx context.Context) VpcRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcRouteTableOutput)
}

type VpcRouteTableOutput struct {
	*pulumi.OutputState
}

func (VpcRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcRouteTable)(nil))
}

func (o VpcRouteTableOutput) ToVpcRouteTableOutput() VpcRouteTableOutput {
	return o
}

func (o VpcRouteTableOutput) ToVpcRouteTableOutputWithContext(ctx context.Context) VpcRouteTableOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VpcRouteTableOutput{})
}
