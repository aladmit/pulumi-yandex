// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MdbMysqlCluster struct {
	pulumi.CustomResourceState

	Access            MdbMysqlClusterAccessOutput            `pulumi:"access"`
	BackupWindowStart MdbMysqlClusterBackupWindowStartOutput `pulumi:"backupWindowStart"`
	CreatedAt         pulumi.StringOutput                    `pulumi:"createdAt"`
	Databases         MdbMysqlClusterDatabaseArrayOutput     `pulumi:"databases"`
	Description       pulumi.StringPtrOutput                 `pulumi:"description"`
	Environment       pulumi.StringOutput                    `pulumi:"environment"`
	FolderId          pulumi.StringOutput                    `pulumi:"folderId"`
	Health            pulumi.StringOutput                    `pulumi:"health"`
	Hosts             MdbMysqlClusterHostArrayOutput         `pulumi:"hosts"`
	Labels            pulumi.StringMapOutput                 `pulumi:"labels"`
	MysqlConfig       pulumi.StringMapOutput                 `pulumi:"mysqlConfig"`
	Name              pulumi.StringOutput                    `pulumi:"name"`
	NetworkId         pulumi.StringOutput                    `pulumi:"networkId"`
	Resources         MdbMysqlClusterResourcesOutput         `pulumi:"resources"`
	Restore           MdbMysqlClusterRestorePtrOutput        `pulumi:"restore"`
	SecurityGroupIds  pulumi.StringArrayOutput               `pulumi:"securityGroupIds"`
	Status            pulumi.StringOutput                    `pulumi:"status"`
	Users             MdbMysqlClusterUserArrayOutput         `pulumi:"users"`
	Version           pulumi.StringOutput                    `pulumi:"version"`
}

// NewMdbMysqlCluster registers a new resource with the given unique name, arguments, and options.
func NewMdbMysqlCluster(ctx *pulumi.Context,
	name string, args *MdbMysqlClusterArgs, opts ...pulumi.ResourceOption) (*MdbMysqlCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Databases == nil {
		return nil, errors.New("invalid value for required argument 'Databases'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.Hosts == nil {
		return nil, errors.New("invalid value for required argument 'Hosts'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Resources == nil {
		return nil, errors.New("invalid value for required argument 'Resources'")
	}
	if args.Users == nil {
		return nil, errors.New("invalid value for required argument 'Users'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource MdbMysqlCluster
	err := ctx.RegisterResource("yandex:index/mdbMysqlCluster:MdbMysqlCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbMysqlCluster gets an existing MdbMysqlCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbMysqlCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbMysqlClusterState, opts ...pulumi.ResourceOption) (*MdbMysqlCluster, error) {
	var resource MdbMysqlCluster
	err := ctx.ReadResource("yandex:index/mdbMysqlCluster:MdbMysqlCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbMysqlCluster resources.
type mdbMysqlClusterState struct {
	Access            *MdbMysqlClusterAccess            `pulumi:"access"`
	BackupWindowStart *MdbMysqlClusterBackupWindowStart `pulumi:"backupWindowStart"`
	CreatedAt         *string                           `pulumi:"createdAt"`
	Databases         []MdbMysqlClusterDatabase         `pulumi:"databases"`
	Description       *string                           `pulumi:"description"`
	Environment       *string                           `pulumi:"environment"`
	FolderId          *string                           `pulumi:"folderId"`
	Health            *string                           `pulumi:"health"`
	Hosts             []MdbMysqlClusterHost             `pulumi:"hosts"`
	Labels            map[string]string                 `pulumi:"labels"`
	MysqlConfig       map[string]string                 `pulumi:"mysqlConfig"`
	Name              *string                           `pulumi:"name"`
	NetworkId         *string                           `pulumi:"networkId"`
	Resources         *MdbMysqlClusterResources         `pulumi:"resources"`
	Restore           *MdbMysqlClusterRestore           `pulumi:"restore"`
	SecurityGroupIds  []string                          `pulumi:"securityGroupIds"`
	Status            *string                           `pulumi:"status"`
	Users             []MdbMysqlClusterUser             `pulumi:"users"`
	Version           *string                           `pulumi:"version"`
}

type MdbMysqlClusterState struct {
	Access            MdbMysqlClusterAccessPtrInput
	BackupWindowStart MdbMysqlClusterBackupWindowStartPtrInput
	CreatedAt         pulumi.StringPtrInput
	Databases         MdbMysqlClusterDatabaseArrayInput
	Description       pulumi.StringPtrInput
	Environment       pulumi.StringPtrInput
	FolderId          pulumi.StringPtrInput
	Health            pulumi.StringPtrInput
	Hosts             MdbMysqlClusterHostArrayInput
	Labels            pulumi.StringMapInput
	MysqlConfig       pulumi.StringMapInput
	Name              pulumi.StringPtrInput
	NetworkId         pulumi.StringPtrInput
	Resources         MdbMysqlClusterResourcesPtrInput
	Restore           MdbMysqlClusterRestorePtrInput
	SecurityGroupIds  pulumi.StringArrayInput
	Status            pulumi.StringPtrInput
	Users             MdbMysqlClusterUserArrayInput
	Version           pulumi.StringPtrInput
}

func (MdbMysqlClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbMysqlClusterState)(nil)).Elem()
}

type mdbMysqlClusterArgs struct {
	Access            *MdbMysqlClusterAccess            `pulumi:"access"`
	BackupWindowStart *MdbMysqlClusterBackupWindowStart `pulumi:"backupWindowStart"`
	Databases         []MdbMysqlClusterDatabase         `pulumi:"databases"`
	Description       *string                           `pulumi:"description"`
	Environment       string                            `pulumi:"environment"`
	FolderId          *string                           `pulumi:"folderId"`
	Hosts             []MdbMysqlClusterHost             `pulumi:"hosts"`
	Labels            map[string]string                 `pulumi:"labels"`
	MysqlConfig       map[string]string                 `pulumi:"mysqlConfig"`
	Name              *string                           `pulumi:"name"`
	NetworkId         string                            `pulumi:"networkId"`
	Resources         MdbMysqlClusterResources          `pulumi:"resources"`
	Restore           *MdbMysqlClusterRestore           `pulumi:"restore"`
	SecurityGroupIds  []string                          `pulumi:"securityGroupIds"`
	Users             []MdbMysqlClusterUser             `pulumi:"users"`
	Version           string                            `pulumi:"version"`
}

// The set of arguments for constructing a MdbMysqlCluster resource.
type MdbMysqlClusterArgs struct {
	Access            MdbMysqlClusterAccessPtrInput
	BackupWindowStart MdbMysqlClusterBackupWindowStartPtrInput
	Databases         MdbMysqlClusterDatabaseArrayInput
	Description       pulumi.StringPtrInput
	Environment       pulumi.StringInput
	FolderId          pulumi.StringPtrInput
	Hosts             MdbMysqlClusterHostArrayInput
	Labels            pulumi.StringMapInput
	MysqlConfig       pulumi.StringMapInput
	Name              pulumi.StringPtrInput
	NetworkId         pulumi.StringInput
	Resources         MdbMysqlClusterResourcesInput
	Restore           MdbMysqlClusterRestorePtrInput
	SecurityGroupIds  pulumi.StringArrayInput
	Users             MdbMysqlClusterUserArrayInput
	Version           pulumi.StringInput
}

func (MdbMysqlClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbMysqlClusterArgs)(nil)).Elem()
}

type MdbMysqlClusterInput interface {
	pulumi.Input

	ToMdbMysqlClusterOutput() MdbMysqlClusterOutput
	ToMdbMysqlClusterOutputWithContext(ctx context.Context) MdbMysqlClusterOutput
}

func (*MdbMysqlCluster) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlCluster)(nil))
}

func (i *MdbMysqlCluster) ToMdbMysqlClusterOutput() MdbMysqlClusterOutput {
	return i.ToMdbMysqlClusterOutputWithContext(context.Background())
}

func (i *MdbMysqlCluster) ToMdbMysqlClusterOutputWithContext(ctx context.Context) MdbMysqlClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbMysqlClusterOutput)
}

type MdbMysqlClusterOutput struct {
	*pulumi.OutputState
}

func (MdbMysqlClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbMysqlCluster)(nil))
}

func (o MdbMysqlClusterOutput) ToMdbMysqlClusterOutput() MdbMysqlClusterOutput {
	return o
}

func (o MdbMysqlClusterOutput) ToMdbMysqlClusterOutputWithContext(ctx context.Context) MdbMysqlClusterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MdbMysqlClusterOutput{})
}
