// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DataprocCluster struct {
	pulumi.CustomResourceState

	Bucket           pulumi.StringPtrOutput             `pulumi:"bucket"`
	ClusterConfig    DataprocClusterClusterConfigOutput `pulumi:"clusterConfig"`
	CreatedAt        pulumi.StringOutput                `pulumi:"createdAt"`
	Description      pulumi.StringPtrOutput             `pulumi:"description"`
	FolderId         pulumi.StringOutput                `pulumi:"folderId"`
	Labels           pulumi.StringMapOutput             `pulumi:"labels"`
	Name             pulumi.StringOutput                `pulumi:"name"`
	ServiceAccountId pulumi.StringOutput                `pulumi:"serviceAccountId"`
	UiProxy          pulumi.BoolPtrOutput               `pulumi:"uiProxy"`
	ZoneId           pulumi.StringOutput                `pulumi:"zoneId"`
}

// NewDataprocCluster registers a new resource with the given unique name, arguments, and options.
func NewDataprocCluster(ctx *pulumi.Context,
	name string, args *DataprocClusterArgs, opts ...pulumi.ResourceOption) (*DataprocCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterConfig == nil {
		return nil, errors.New("invalid value for required argument 'ClusterConfig'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	var resource DataprocCluster
	err := ctx.RegisterResource("yandex:index/dataprocCluster:DataprocCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocCluster gets an existing DataprocCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocClusterState, opts ...pulumi.ResourceOption) (*DataprocCluster, error) {
	var resource DataprocCluster
	err := ctx.ReadResource("yandex:index/dataprocCluster:DataprocCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocCluster resources.
type dataprocClusterState struct {
	Bucket           *string                       `pulumi:"bucket"`
	ClusterConfig    *DataprocClusterClusterConfig `pulumi:"clusterConfig"`
	CreatedAt        *string                       `pulumi:"createdAt"`
	Description      *string                       `pulumi:"description"`
	FolderId         *string                       `pulumi:"folderId"`
	Labels           map[string]string             `pulumi:"labels"`
	Name             *string                       `pulumi:"name"`
	ServiceAccountId *string                       `pulumi:"serviceAccountId"`
	UiProxy          *bool                         `pulumi:"uiProxy"`
	ZoneId           *string                       `pulumi:"zoneId"`
}

type DataprocClusterState struct {
	Bucket           pulumi.StringPtrInput
	ClusterConfig    DataprocClusterClusterConfigPtrInput
	CreatedAt        pulumi.StringPtrInput
	Description      pulumi.StringPtrInput
	FolderId         pulumi.StringPtrInput
	Labels           pulumi.StringMapInput
	Name             pulumi.StringPtrInput
	ServiceAccountId pulumi.StringPtrInput
	UiProxy          pulumi.BoolPtrInput
	ZoneId           pulumi.StringPtrInput
}

func (DataprocClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterState)(nil)).Elem()
}

type dataprocClusterArgs struct {
	Bucket           *string                      `pulumi:"bucket"`
	ClusterConfig    DataprocClusterClusterConfig `pulumi:"clusterConfig"`
	Description      *string                      `pulumi:"description"`
	FolderId         *string                      `pulumi:"folderId"`
	Labels           map[string]string            `pulumi:"labels"`
	Name             *string                      `pulumi:"name"`
	ServiceAccountId string                       `pulumi:"serviceAccountId"`
	UiProxy          *bool                        `pulumi:"uiProxy"`
	ZoneId           *string                      `pulumi:"zoneId"`
}

// The set of arguments for constructing a DataprocCluster resource.
type DataprocClusterArgs struct {
	Bucket           pulumi.StringPtrInput
	ClusterConfig    DataprocClusterClusterConfigInput
	Description      pulumi.StringPtrInput
	FolderId         pulumi.StringPtrInput
	Labels           pulumi.StringMapInput
	Name             pulumi.StringPtrInput
	ServiceAccountId pulumi.StringInput
	UiProxy          pulumi.BoolPtrInput
	ZoneId           pulumi.StringPtrInput
}

func (DataprocClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterArgs)(nil)).Elem()
}

type DataprocClusterInput interface {
	pulumi.Input

	ToDataprocClusterOutput() DataprocClusterOutput
	ToDataprocClusterOutputWithContext(ctx context.Context) DataprocClusterOutput
}

func (*DataprocCluster) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocCluster)(nil))
}

func (i *DataprocCluster) ToDataprocClusterOutput() DataprocClusterOutput {
	return i.ToDataprocClusterOutputWithContext(context.Background())
}

func (i *DataprocCluster) ToDataprocClusterOutputWithContext(ctx context.Context) DataprocClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterOutput)
}

type DataprocClusterOutput struct {
	*pulumi.OutputState
}

func (DataprocClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataprocCluster)(nil))
}

func (o DataprocClusterOutput) ToDataprocClusterOutput() DataprocClusterOutput {
	return o
}

func (o DataprocClusterOutput) ToDataprocClusterOutputWithContext(ctx context.Context) DataprocClusterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DataprocClusterOutput{})
}
