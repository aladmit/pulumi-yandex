// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type KubernetesNodeGroup struct {
	pulumi.CustomResourceState

	AllocationPolicy     KubernetesNodeGroupAllocationPolicyOutput  `pulumi:"allocationPolicy"`
	AllowedUnsafeSysctls pulumi.StringArrayOutput                   `pulumi:"allowedUnsafeSysctls"`
	ClusterId            pulumi.StringOutput                        `pulumi:"clusterId"`
	CreatedAt            pulumi.StringOutput                        `pulumi:"createdAt"`
	DeployPolicy         KubernetesNodeGroupDeployPolicyOutput      `pulumi:"deployPolicy"`
	Description          pulumi.StringOutput                        `pulumi:"description"`
	InstanceGroupId      pulumi.StringOutput                        `pulumi:"instanceGroupId"`
	InstanceTemplate     KubernetesNodeGroupInstanceTemplateOutput  `pulumi:"instanceTemplate"`
	Labels               pulumi.StringMapOutput                     `pulumi:"labels"`
	MaintenancePolicy    KubernetesNodeGroupMaintenancePolicyOutput `pulumi:"maintenancePolicy"`
	Name                 pulumi.StringOutput                        `pulumi:"name"`
	NodeLabels           pulumi.StringMapOutput                     `pulumi:"nodeLabels"`
	NodeTaints           pulumi.StringArrayOutput                   `pulumi:"nodeTaints"`
	ScalePolicy          KubernetesNodeGroupScalePolicyOutput       `pulumi:"scalePolicy"`
	Status               pulumi.StringOutput                        `pulumi:"status"`
	Version              pulumi.StringOutput                        `pulumi:"version"`
	VersionInfo          KubernetesNodeGroupVersionInfoOutput       `pulumi:"versionInfo"`
}

// NewKubernetesNodeGroup registers a new resource with the given unique name, arguments, and options.
func NewKubernetesNodeGroup(ctx *pulumi.Context,
	name string, args *KubernetesNodeGroupArgs, opts ...pulumi.ResourceOption) (*KubernetesNodeGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.InstanceTemplate == nil {
		return nil, errors.New("invalid value for required argument 'InstanceTemplate'")
	}
	if args.ScalePolicy == nil {
		return nil, errors.New("invalid value for required argument 'ScalePolicy'")
	}
	var resource KubernetesNodeGroup
	err := ctx.RegisterResource("yandex:index/kubernetesNodeGroup:KubernetesNodeGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesNodeGroup gets an existing KubernetesNodeGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesNodeGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesNodeGroupState, opts ...pulumi.ResourceOption) (*KubernetesNodeGroup, error) {
	var resource KubernetesNodeGroup
	err := ctx.ReadResource("yandex:index/kubernetesNodeGroup:KubernetesNodeGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesNodeGroup resources.
type kubernetesNodeGroupState struct {
	AllocationPolicy     *KubernetesNodeGroupAllocationPolicy  `pulumi:"allocationPolicy"`
	AllowedUnsafeSysctls []string                              `pulumi:"allowedUnsafeSysctls"`
	ClusterId            *string                               `pulumi:"clusterId"`
	CreatedAt            *string                               `pulumi:"createdAt"`
	DeployPolicy         *KubernetesNodeGroupDeployPolicy      `pulumi:"deployPolicy"`
	Description          *string                               `pulumi:"description"`
	InstanceGroupId      *string                               `pulumi:"instanceGroupId"`
	InstanceTemplate     *KubernetesNodeGroupInstanceTemplate  `pulumi:"instanceTemplate"`
	Labels               map[string]string                     `pulumi:"labels"`
	MaintenancePolicy    *KubernetesNodeGroupMaintenancePolicy `pulumi:"maintenancePolicy"`
	Name                 *string                               `pulumi:"name"`
	NodeLabels           map[string]string                     `pulumi:"nodeLabels"`
	NodeTaints           []string                              `pulumi:"nodeTaints"`
	ScalePolicy          *KubernetesNodeGroupScalePolicy       `pulumi:"scalePolicy"`
	Status               *string                               `pulumi:"status"`
	Version              *string                               `pulumi:"version"`
	VersionInfo          *KubernetesNodeGroupVersionInfo       `pulumi:"versionInfo"`
}

type KubernetesNodeGroupState struct {
	AllocationPolicy     KubernetesNodeGroupAllocationPolicyPtrInput
	AllowedUnsafeSysctls pulumi.StringArrayInput
	ClusterId            pulumi.StringPtrInput
	CreatedAt            pulumi.StringPtrInput
	DeployPolicy         KubernetesNodeGroupDeployPolicyPtrInput
	Description          pulumi.StringPtrInput
	InstanceGroupId      pulumi.StringPtrInput
	InstanceTemplate     KubernetesNodeGroupInstanceTemplatePtrInput
	Labels               pulumi.StringMapInput
	MaintenancePolicy    KubernetesNodeGroupMaintenancePolicyPtrInput
	Name                 pulumi.StringPtrInput
	NodeLabels           pulumi.StringMapInput
	NodeTaints           pulumi.StringArrayInput
	ScalePolicy          KubernetesNodeGroupScalePolicyPtrInput
	Status               pulumi.StringPtrInput
	Version              pulumi.StringPtrInput
	VersionInfo          KubernetesNodeGroupVersionInfoPtrInput
}

func (KubernetesNodeGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesNodeGroupState)(nil)).Elem()
}

type kubernetesNodeGroupArgs struct {
	AllocationPolicy     *KubernetesNodeGroupAllocationPolicy  `pulumi:"allocationPolicy"`
	AllowedUnsafeSysctls []string                              `pulumi:"allowedUnsafeSysctls"`
	ClusterId            string                                `pulumi:"clusterId"`
	DeployPolicy         *KubernetesNodeGroupDeployPolicy      `pulumi:"deployPolicy"`
	Description          *string                               `pulumi:"description"`
	InstanceTemplate     KubernetesNodeGroupInstanceTemplate   `pulumi:"instanceTemplate"`
	Labels               map[string]string                     `pulumi:"labels"`
	MaintenancePolicy    *KubernetesNodeGroupMaintenancePolicy `pulumi:"maintenancePolicy"`
	Name                 *string                               `pulumi:"name"`
	NodeLabels           map[string]string                     `pulumi:"nodeLabels"`
	NodeTaints           []string                              `pulumi:"nodeTaints"`
	ScalePolicy          KubernetesNodeGroupScalePolicy        `pulumi:"scalePolicy"`
	Version              *string                               `pulumi:"version"`
}

// The set of arguments for constructing a KubernetesNodeGroup resource.
type KubernetesNodeGroupArgs struct {
	AllocationPolicy     KubernetesNodeGroupAllocationPolicyPtrInput
	AllowedUnsafeSysctls pulumi.StringArrayInput
	ClusterId            pulumi.StringInput
	DeployPolicy         KubernetesNodeGroupDeployPolicyPtrInput
	Description          pulumi.StringPtrInput
	InstanceTemplate     KubernetesNodeGroupInstanceTemplateInput
	Labels               pulumi.StringMapInput
	MaintenancePolicy    KubernetesNodeGroupMaintenancePolicyPtrInput
	Name                 pulumi.StringPtrInput
	NodeLabels           pulumi.StringMapInput
	NodeTaints           pulumi.StringArrayInput
	ScalePolicy          KubernetesNodeGroupScalePolicyInput
	Version              pulumi.StringPtrInput
}

func (KubernetesNodeGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesNodeGroupArgs)(nil)).Elem()
}

type KubernetesNodeGroupInput interface {
	pulumi.Input

	ToKubernetesNodeGroupOutput() KubernetesNodeGroupOutput
	ToKubernetesNodeGroupOutputWithContext(ctx context.Context) KubernetesNodeGroupOutput
}

func (*KubernetesNodeGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroup)(nil))
}

func (i *KubernetesNodeGroup) ToKubernetesNodeGroupOutput() KubernetesNodeGroupOutput {
	return i.ToKubernetesNodeGroupOutputWithContext(context.Background())
}

func (i *KubernetesNodeGroup) ToKubernetesNodeGroupOutputWithContext(ctx context.Context) KubernetesNodeGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodeGroupOutput)
}

type KubernetesNodeGroupOutput struct {
	*pulumi.OutputState
}

func (KubernetesNodeGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodeGroup)(nil))
}

func (o KubernetesNodeGroupOutput) ToKubernetesNodeGroupOutput() KubernetesNodeGroupOutput {
	return o
}

func (o KubernetesNodeGroupOutput) ToKubernetesNodeGroupOutputWithContext(ctx context.Context) KubernetesNodeGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(KubernetesNodeGroupOutput{})
}
