// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type VpcSecurityGroup struct {
	pulumi.CustomResourceState

	CreatedAt   pulumi.StringOutput                `pulumi:"createdAt"`
	Description pulumi.StringPtrOutput             `pulumi:"description"`
	Egresses    VpcSecurityGroupEgressArrayOutput  `pulumi:"egresses"`
	FolderId    pulumi.StringOutput                `pulumi:"folderId"`
	Ingresses   VpcSecurityGroupIngressArrayOutput `pulumi:"ingresses"`
	Labels      pulumi.StringMapOutput             `pulumi:"labels"`
	Name        pulumi.StringOutput                `pulumi:"name"`
	NetworkId   pulumi.StringOutput                `pulumi:"networkId"`
	Status      pulumi.StringOutput                `pulumi:"status"`
}

// NewVpcSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewVpcSecurityGroup(ctx *pulumi.Context,
	name string, args *VpcSecurityGroupArgs, opts ...pulumi.ResourceOption) (*VpcSecurityGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	var resource VpcSecurityGroup
	err := ctx.RegisterResource("yandex:index/vpcSecurityGroup:VpcSecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcSecurityGroup gets an existing VpcSecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcSecurityGroupState, opts ...pulumi.ResourceOption) (*VpcSecurityGroup, error) {
	var resource VpcSecurityGroup
	err := ctx.ReadResource("yandex:index/vpcSecurityGroup:VpcSecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcSecurityGroup resources.
type vpcSecurityGroupState struct {
	CreatedAt   *string                   `pulumi:"createdAt"`
	Description *string                   `pulumi:"description"`
	Egresses    []VpcSecurityGroupEgress  `pulumi:"egresses"`
	FolderId    *string                   `pulumi:"folderId"`
	Ingresses   []VpcSecurityGroupIngress `pulumi:"ingresses"`
	Labels      map[string]string         `pulumi:"labels"`
	Name        *string                   `pulumi:"name"`
	NetworkId   *string                   `pulumi:"networkId"`
	Status      *string                   `pulumi:"status"`
}

type VpcSecurityGroupState struct {
	CreatedAt   pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	Egresses    VpcSecurityGroupEgressArrayInput
	FolderId    pulumi.StringPtrInput
	Ingresses   VpcSecurityGroupIngressArrayInput
	Labels      pulumi.StringMapInput
	Name        pulumi.StringPtrInput
	NetworkId   pulumi.StringPtrInput
	Status      pulumi.StringPtrInput
}

func (VpcSecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcSecurityGroupState)(nil)).Elem()
}

type vpcSecurityGroupArgs struct {
	Description *string                   `pulumi:"description"`
	Egresses    []VpcSecurityGroupEgress  `pulumi:"egresses"`
	FolderId    *string                   `pulumi:"folderId"`
	Ingresses   []VpcSecurityGroupIngress `pulumi:"ingresses"`
	Labels      map[string]string         `pulumi:"labels"`
	Name        *string                   `pulumi:"name"`
	NetworkId   string                    `pulumi:"networkId"`
}

// The set of arguments for constructing a VpcSecurityGroup resource.
type VpcSecurityGroupArgs struct {
	Description pulumi.StringPtrInput
	Egresses    VpcSecurityGroupEgressArrayInput
	FolderId    pulumi.StringPtrInput
	Ingresses   VpcSecurityGroupIngressArrayInput
	Labels      pulumi.StringMapInput
	Name        pulumi.StringPtrInput
	NetworkId   pulumi.StringInput
}

func (VpcSecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcSecurityGroupArgs)(nil)).Elem()
}

type VpcSecurityGroupInput interface {
	pulumi.Input

	ToVpcSecurityGroupOutput() VpcSecurityGroupOutput
	ToVpcSecurityGroupOutputWithContext(ctx context.Context) VpcSecurityGroupOutput
}

func (*VpcSecurityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSecurityGroup)(nil))
}

func (i *VpcSecurityGroup) ToVpcSecurityGroupOutput() VpcSecurityGroupOutput {
	return i.ToVpcSecurityGroupOutputWithContext(context.Background())
}

func (i *VpcSecurityGroup) ToVpcSecurityGroupOutputWithContext(ctx context.Context) VpcSecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcSecurityGroupOutput)
}

type VpcSecurityGroupOutput struct {
	*pulumi.OutputState
}

func (VpcSecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcSecurityGroup)(nil))
}

func (o VpcSecurityGroupOutput) ToVpcSecurityGroupOutput() VpcSecurityGroupOutput {
	return o
}

func (o VpcSecurityGroupOutput) ToVpcSecurityGroupOutputWithContext(ctx context.Context) VpcSecurityGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VpcSecurityGroupOutput{})
}
