// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type KmsSecretCiphertext struct {
	pulumi.CustomResourceState

	AadContext pulumi.StringPtrOutput `pulumi:"aadContext"`
	Ciphertext pulumi.StringOutput    `pulumi:"ciphertext"`
	KeyId      pulumi.StringOutput    `pulumi:"keyId"`
	Plaintext  pulumi.StringOutput    `pulumi:"plaintext"`
}

// NewKmsSecretCiphertext registers a new resource with the given unique name, arguments, and options.
func NewKmsSecretCiphertext(ctx *pulumi.Context,
	name string, args *KmsSecretCiphertextArgs, opts ...pulumi.ResourceOption) (*KmsSecretCiphertext, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KeyId == nil {
		return nil, errors.New("invalid value for required argument 'KeyId'")
	}
	if args.Plaintext == nil {
		return nil, errors.New("invalid value for required argument 'Plaintext'")
	}
	var resource KmsSecretCiphertext
	err := ctx.RegisterResource("yandex:index/kmsSecretCiphertext:KmsSecretCiphertext", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsSecretCiphertext gets an existing KmsSecretCiphertext resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsSecretCiphertext(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsSecretCiphertextState, opts ...pulumi.ResourceOption) (*KmsSecretCiphertext, error) {
	var resource KmsSecretCiphertext
	err := ctx.ReadResource("yandex:index/kmsSecretCiphertext:KmsSecretCiphertext", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsSecretCiphertext resources.
type kmsSecretCiphertextState struct {
	AadContext *string `pulumi:"aadContext"`
	Ciphertext *string `pulumi:"ciphertext"`
	KeyId      *string `pulumi:"keyId"`
	Plaintext  *string `pulumi:"plaintext"`
}

type KmsSecretCiphertextState struct {
	AadContext pulumi.StringPtrInput
	Ciphertext pulumi.StringPtrInput
	KeyId      pulumi.StringPtrInput
	Plaintext  pulumi.StringPtrInput
}

func (KmsSecretCiphertextState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsSecretCiphertextState)(nil)).Elem()
}

type kmsSecretCiphertextArgs struct {
	AadContext *string `pulumi:"aadContext"`
	KeyId      string  `pulumi:"keyId"`
	Plaintext  string  `pulumi:"plaintext"`
}

// The set of arguments for constructing a KmsSecretCiphertext resource.
type KmsSecretCiphertextArgs struct {
	AadContext pulumi.StringPtrInput
	KeyId      pulumi.StringInput
	Plaintext  pulumi.StringInput
}

func (KmsSecretCiphertextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsSecretCiphertextArgs)(nil)).Elem()
}

type KmsSecretCiphertextInput interface {
	pulumi.Input

	ToKmsSecretCiphertextOutput() KmsSecretCiphertextOutput
	ToKmsSecretCiphertextOutputWithContext(ctx context.Context) KmsSecretCiphertextOutput
}

func (*KmsSecretCiphertext) ElementType() reflect.Type {
	return reflect.TypeOf((*KmsSecretCiphertext)(nil))
}

func (i *KmsSecretCiphertext) ToKmsSecretCiphertextOutput() KmsSecretCiphertextOutput {
	return i.ToKmsSecretCiphertextOutputWithContext(context.Background())
}

func (i *KmsSecretCiphertext) ToKmsSecretCiphertextOutputWithContext(ctx context.Context) KmsSecretCiphertextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsSecretCiphertextOutput)
}

type KmsSecretCiphertextOutput struct {
	*pulumi.OutputState
}

func (KmsSecretCiphertextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KmsSecretCiphertext)(nil))
}

func (o KmsSecretCiphertextOutput) ToKmsSecretCiphertextOutput() KmsSecretCiphertextOutput {
	return o
}

func (o KmsSecretCiphertextOutput) ToKmsSecretCiphertextOutputWithContext(ctx context.Context) KmsSecretCiphertextOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(KmsSecretCiphertextOutput{})
}
