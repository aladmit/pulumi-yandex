// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ContainerRegistry struct {
	pulumi.CustomResourceState

	CreatedAt pulumi.StringOutput    `pulumi:"createdAt"`
	FolderId  pulumi.StringOutput    `pulumi:"folderId"`
	Labels    pulumi.StringMapOutput `pulumi:"labels"`
	Name      pulumi.StringOutput    `pulumi:"name"`
	Status    pulumi.StringOutput    `pulumi:"status"`
}

// NewContainerRegistry registers a new resource with the given unique name, arguments, and options.
func NewContainerRegistry(ctx *pulumi.Context,
	name string, args *ContainerRegistryArgs, opts ...pulumi.ResourceOption) (*ContainerRegistry, error) {
	if args == nil {
		args = &ContainerRegistryArgs{}
	}

	var resource ContainerRegistry
	err := ctx.RegisterResource("yandex:index/containerRegistry:ContainerRegistry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerRegistry gets an existing ContainerRegistry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerRegistry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerRegistryState, opts ...pulumi.ResourceOption) (*ContainerRegistry, error) {
	var resource ContainerRegistry
	err := ctx.ReadResource("yandex:index/containerRegistry:ContainerRegistry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerRegistry resources.
type containerRegistryState struct {
	CreatedAt *string           `pulumi:"createdAt"`
	FolderId  *string           `pulumi:"folderId"`
	Labels    map[string]string `pulumi:"labels"`
	Name      *string           `pulumi:"name"`
	Status    *string           `pulumi:"status"`
}

type ContainerRegistryState struct {
	CreatedAt pulumi.StringPtrInput
	FolderId  pulumi.StringPtrInput
	Labels    pulumi.StringMapInput
	Name      pulumi.StringPtrInput
	Status    pulumi.StringPtrInput
}

func (ContainerRegistryState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRegistryState)(nil)).Elem()
}

type containerRegistryArgs struct {
	FolderId *string           `pulumi:"folderId"`
	Labels   map[string]string `pulumi:"labels"`
	Name     *string           `pulumi:"name"`
}

// The set of arguments for constructing a ContainerRegistry resource.
type ContainerRegistryArgs struct {
	FolderId pulumi.StringPtrInput
	Labels   pulumi.StringMapInput
	Name     pulumi.StringPtrInput
}

func (ContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRegistryArgs)(nil)).Elem()
}

type ContainerRegistryInput interface {
	pulumi.Input

	ToContainerRegistryOutput() ContainerRegistryOutput
	ToContainerRegistryOutputWithContext(ctx context.Context) ContainerRegistryOutput
}

func (*ContainerRegistry) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistry)(nil))
}

func (i *ContainerRegistry) ToContainerRegistryOutput() ContainerRegistryOutput {
	return i.ToContainerRegistryOutputWithContext(context.Background())
}

func (i *ContainerRegistry) ToContainerRegistryOutputWithContext(ctx context.Context) ContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryOutput)
}

type ContainerRegistryOutput struct {
	*pulumi.OutputState
}

func (ContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistry)(nil))
}

func (o ContainerRegistryOutput) ToContainerRegistryOutput() ContainerRegistryOutput {
	return o
}

func (o ContainerRegistryOutput) ToContainerRegistryOutputWithContext(ctx context.Context) ContainerRegistryOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ContainerRegistryOutput{})
}
