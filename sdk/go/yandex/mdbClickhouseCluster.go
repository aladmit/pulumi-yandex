// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type MdbClickhouseCluster struct {
	pulumi.CustomResourceState

	Access                MdbClickhouseClusterAccessOutput            `pulumi:"access"`
	AdminPassword         pulumi.StringPtrOutput                      `pulumi:"adminPassword"`
	BackupWindowStart     MdbClickhouseClusterBackupWindowStartOutput `pulumi:"backupWindowStart"`
	Clickhouse            MdbClickhouseClusterClickhouseOutput        `pulumi:"clickhouse"`
	CopySchemaOnNewHosts  pulumi.BoolPtrOutput                        `pulumi:"copySchemaOnNewHosts"`
	CreatedAt             pulumi.StringOutput                         `pulumi:"createdAt"`
	Databases             MdbClickhouseClusterDatabaseArrayOutput     `pulumi:"databases"`
	Description           pulumi.StringPtrOutput                      `pulumi:"description"`
	Environment           pulumi.StringOutput                         `pulumi:"environment"`
	FolderId              pulumi.StringOutput                         `pulumi:"folderId"`
	FormatSchemas         MdbClickhouseClusterFormatSchemaArrayOutput `pulumi:"formatSchemas"`
	Health                pulumi.StringOutput                         `pulumi:"health"`
	Hosts                 MdbClickhouseClusterHostArrayOutput         `pulumi:"hosts"`
	Labels                pulumi.StringMapOutput                      `pulumi:"labels"`
	MlModels              MdbClickhouseClusterMlModelArrayOutput      `pulumi:"mlModels"`
	Name                  pulumi.StringOutput                         `pulumi:"name"`
	NetworkId             pulumi.StringOutput                         `pulumi:"networkId"`
	SecurityGroupIds      pulumi.StringArrayOutput                    `pulumi:"securityGroupIds"`
	ShardGroups           MdbClickhouseClusterShardGroupArrayOutput   `pulumi:"shardGroups"`
	SqlDatabaseManagement pulumi.BoolOutput                           `pulumi:"sqlDatabaseManagement"`
	SqlUserManagement     pulumi.BoolOutput                           `pulumi:"sqlUserManagement"`
	Status                pulumi.StringOutput                         `pulumi:"status"`
	Users                 MdbClickhouseClusterUserArrayOutput         `pulumi:"users"`
	Version               pulumi.StringOutput                         `pulumi:"version"`
	Zookeeper             MdbClickhouseClusterZookeeperOutput         `pulumi:"zookeeper"`
}

// NewMdbClickhouseCluster registers a new resource with the given unique name, arguments, and options.
func NewMdbClickhouseCluster(ctx *pulumi.Context,
	name string, args *MdbClickhouseClusterArgs, opts ...pulumi.ResourceOption) (*MdbClickhouseCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Clickhouse == nil {
		return nil, errors.New("invalid value for required argument 'Clickhouse'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.Hosts == nil {
		return nil, errors.New("invalid value for required argument 'Hosts'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	var resource MdbClickhouseCluster
	err := ctx.RegisterResource("yandex:index/mdbClickhouseCluster:MdbClickhouseCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbClickhouseCluster gets an existing MdbClickhouseCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbClickhouseCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbClickhouseClusterState, opts ...pulumi.ResourceOption) (*MdbClickhouseCluster, error) {
	var resource MdbClickhouseCluster
	err := ctx.ReadResource("yandex:index/mdbClickhouseCluster:MdbClickhouseCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbClickhouseCluster resources.
type mdbClickhouseClusterState struct {
	Access                *MdbClickhouseClusterAccess            `pulumi:"access"`
	AdminPassword         *string                                `pulumi:"adminPassword"`
	BackupWindowStart     *MdbClickhouseClusterBackupWindowStart `pulumi:"backupWindowStart"`
	Clickhouse            *MdbClickhouseClusterClickhouse        `pulumi:"clickhouse"`
	CopySchemaOnNewHosts  *bool                                  `pulumi:"copySchemaOnNewHosts"`
	CreatedAt             *string                                `pulumi:"createdAt"`
	Databases             []MdbClickhouseClusterDatabase         `pulumi:"databases"`
	Description           *string                                `pulumi:"description"`
	Environment           *string                                `pulumi:"environment"`
	FolderId              *string                                `pulumi:"folderId"`
	FormatSchemas         []MdbClickhouseClusterFormatSchema     `pulumi:"formatSchemas"`
	Health                *string                                `pulumi:"health"`
	Hosts                 []MdbClickhouseClusterHost             `pulumi:"hosts"`
	Labels                map[string]string                      `pulumi:"labels"`
	MlModels              []MdbClickhouseClusterMlModel          `pulumi:"mlModels"`
	Name                  *string                                `pulumi:"name"`
	NetworkId             *string                                `pulumi:"networkId"`
	SecurityGroupIds      []string                               `pulumi:"securityGroupIds"`
	ShardGroups           []MdbClickhouseClusterShardGroup       `pulumi:"shardGroups"`
	SqlDatabaseManagement *bool                                  `pulumi:"sqlDatabaseManagement"`
	SqlUserManagement     *bool                                  `pulumi:"sqlUserManagement"`
	Status                *string                                `pulumi:"status"`
	Users                 []MdbClickhouseClusterUser             `pulumi:"users"`
	Version               *string                                `pulumi:"version"`
	Zookeeper             *MdbClickhouseClusterZookeeper         `pulumi:"zookeeper"`
}

type MdbClickhouseClusterState struct {
	Access                MdbClickhouseClusterAccessPtrInput
	AdminPassword         pulumi.StringPtrInput
	BackupWindowStart     MdbClickhouseClusterBackupWindowStartPtrInput
	Clickhouse            MdbClickhouseClusterClickhousePtrInput
	CopySchemaOnNewHosts  pulumi.BoolPtrInput
	CreatedAt             pulumi.StringPtrInput
	Databases             MdbClickhouseClusterDatabaseArrayInput
	Description           pulumi.StringPtrInput
	Environment           pulumi.StringPtrInput
	FolderId              pulumi.StringPtrInput
	FormatSchemas         MdbClickhouseClusterFormatSchemaArrayInput
	Health                pulumi.StringPtrInput
	Hosts                 MdbClickhouseClusterHostArrayInput
	Labels                pulumi.StringMapInput
	MlModels              MdbClickhouseClusterMlModelArrayInput
	Name                  pulumi.StringPtrInput
	NetworkId             pulumi.StringPtrInput
	SecurityGroupIds      pulumi.StringArrayInput
	ShardGroups           MdbClickhouseClusterShardGroupArrayInput
	SqlDatabaseManagement pulumi.BoolPtrInput
	SqlUserManagement     pulumi.BoolPtrInput
	Status                pulumi.StringPtrInput
	Users                 MdbClickhouseClusterUserArrayInput
	Version               pulumi.StringPtrInput
	Zookeeper             MdbClickhouseClusterZookeeperPtrInput
}

func (MdbClickhouseClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbClickhouseClusterState)(nil)).Elem()
}

type mdbClickhouseClusterArgs struct {
	Access                *MdbClickhouseClusterAccess            `pulumi:"access"`
	AdminPassword         *string                                `pulumi:"adminPassword"`
	BackupWindowStart     *MdbClickhouseClusterBackupWindowStart `pulumi:"backupWindowStart"`
	Clickhouse            MdbClickhouseClusterClickhouse         `pulumi:"clickhouse"`
	CopySchemaOnNewHosts  *bool                                  `pulumi:"copySchemaOnNewHosts"`
	Databases             []MdbClickhouseClusterDatabase         `pulumi:"databases"`
	Description           *string                                `pulumi:"description"`
	Environment           string                                 `pulumi:"environment"`
	FolderId              *string                                `pulumi:"folderId"`
	FormatSchemas         []MdbClickhouseClusterFormatSchema     `pulumi:"formatSchemas"`
	Hosts                 []MdbClickhouseClusterHost             `pulumi:"hosts"`
	Labels                map[string]string                      `pulumi:"labels"`
	MlModels              []MdbClickhouseClusterMlModel          `pulumi:"mlModels"`
	Name                  *string                                `pulumi:"name"`
	NetworkId             string                                 `pulumi:"networkId"`
	SecurityGroupIds      []string                               `pulumi:"securityGroupIds"`
	ShardGroups           []MdbClickhouseClusterShardGroup       `pulumi:"shardGroups"`
	SqlDatabaseManagement *bool                                  `pulumi:"sqlDatabaseManagement"`
	SqlUserManagement     *bool                                  `pulumi:"sqlUserManagement"`
	Users                 []MdbClickhouseClusterUser             `pulumi:"users"`
	Version               *string                                `pulumi:"version"`
	Zookeeper             *MdbClickhouseClusterZookeeper         `pulumi:"zookeeper"`
}

// The set of arguments for constructing a MdbClickhouseCluster resource.
type MdbClickhouseClusterArgs struct {
	Access                MdbClickhouseClusterAccessPtrInput
	AdminPassword         pulumi.StringPtrInput
	BackupWindowStart     MdbClickhouseClusterBackupWindowStartPtrInput
	Clickhouse            MdbClickhouseClusterClickhouseInput
	CopySchemaOnNewHosts  pulumi.BoolPtrInput
	Databases             MdbClickhouseClusterDatabaseArrayInput
	Description           pulumi.StringPtrInput
	Environment           pulumi.StringInput
	FolderId              pulumi.StringPtrInput
	FormatSchemas         MdbClickhouseClusterFormatSchemaArrayInput
	Hosts                 MdbClickhouseClusterHostArrayInput
	Labels                pulumi.StringMapInput
	MlModels              MdbClickhouseClusterMlModelArrayInput
	Name                  pulumi.StringPtrInput
	NetworkId             pulumi.StringInput
	SecurityGroupIds      pulumi.StringArrayInput
	ShardGroups           MdbClickhouseClusterShardGroupArrayInput
	SqlDatabaseManagement pulumi.BoolPtrInput
	SqlUserManagement     pulumi.BoolPtrInput
	Users                 MdbClickhouseClusterUserArrayInput
	Version               pulumi.StringPtrInput
	Zookeeper             MdbClickhouseClusterZookeeperPtrInput
}

func (MdbClickhouseClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbClickhouseClusterArgs)(nil)).Elem()
}

type MdbClickhouseClusterInput interface {
	pulumi.Input

	ToMdbClickhouseClusterOutput() MdbClickhouseClusterOutput
	ToMdbClickhouseClusterOutputWithContext(ctx context.Context) MdbClickhouseClusterOutput
}

func (*MdbClickhouseCluster) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseCluster)(nil))
}

func (i *MdbClickhouseCluster) ToMdbClickhouseClusterOutput() MdbClickhouseClusterOutput {
	return i.ToMdbClickhouseClusterOutputWithContext(context.Background())
}

func (i *MdbClickhouseCluster) ToMdbClickhouseClusterOutputWithContext(ctx context.Context) MdbClickhouseClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbClickhouseClusterOutput)
}

type MdbClickhouseClusterOutput struct {
	*pulumi.OutputState
}

func (MdbClickhouseClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MdbClickhouseCluster)(nil))
}

func (o MdbClickhouseClusterOutput) ToMdbClickhouseClusterOutput() MdbClickhouseClusterOutput {
	return o
}

func (o MdbClickhouseClusterOutput) ToMdbClickhouseClusterOutputWithContext(ctx context.Context) MdbClickhouseClusterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MdbClickhouseClusterOutput{})
}
